{"version":3,"sources":["../../common/xml-util/build/index.js","../../docx-ts/build/index.js","../../docx-ts/build/xml-components/xml-component.js","component/app/app.module.css","../../docx-ts/build/paragraph/paragraph.js","../../docx-driver/build/index.js","../../common/xml-util/build/text.js","../../docx-secretary/build/secretary.js","../../docx-style/build/docx-style.js","../../docx-ts/build/document/body.js","../../docx-ts/build/paragraph/paragraph-prop.js","../../docx-ts/build/paragraph/run/run.js","../../docx-ts/build/paragraph/run/run-prop.js","../../docx-ts/build/table/table-prop.js","../../style-gardener/build/section/main/default.js","component/intro/manual.module.css","../../common/xml-util/build/conversion.js","../../common/xml-util/build/search.js","../../docx-secretary/build/index.js","../../docx-style/build/index.js","../../docx-ts/build/document/document.js","../../docx-ts/build/xml-components/attributes.js","../../docx-ts/build/paragraph/run/run-components/text.js","../../docx-ts/build/table/table.js","../../docx-ts/build/xml-components/property-item.js","../../style-gardener/build/section/abstract-toc/section.js","component/left-nav/nav.module.css","component/main/main.module.css","component/cmd-bar/cmdbar.module.css","../../docx-driver/build/docx-driver.js","../../docx-inject/build/index.js","../../docx-inject/build/docx-inject.js","../../common/xml-util/build/section.js","../../common/xml-util/build/caption.js","../../style-sheet/build/index.js","../../style-sheet/build/style-sheet.js","../../docx-secretary/build/std-secretary.js","../../docx-style/build/user-style.js","../../docx-style/build/std-style.js","../../docx-secretary/build/user-secretary.js","../../docx-numbering/build/index.js","../../docx-numbering/build/docx-numbering.js","../../style-sheet/build/distillers/distiller.js","../../style-sheet/build/distillers/table.js","../../style-sheet/build/distillers/default.js","../../style-sheet/build/distillers/caption.js","../../style-sheet/build/distillers/formula.js","../../style-sheet/build/distillers/raw.js","../../style-sheet/build/distillers/toc.js","../../style-gardener/build/index.js","../../style-gardener/build/gardener.js","../../docx-ts/build/xml-components/base.js","../../docx-ts/build/import-docx/importer.js","../../docx-ts/build/xml-components/component-factory.js","../../docx-ts/build/xml-components/component-table.js","../../style-gardener/build/section/main/main.js","../../style-gardener/build/section/main/caption.js","../../style-gardener/build/section/main/formula.js","../../style-gardener/build/section/main/table.js","../../style-gardener/build/section/main/unknown.js","../../style-gardener/build/section/abstract-toc/abstract-toc.js","../../style-gardener/build/section/abstract-toc/toc.js","../../style-gardener/build/section/abstract-toc/title.js","../../style-gardener/build/section/abstract-toc/entity.js","../../style-gardener/build/section/abstract-toc/name.js","../../style-gardener/build/section/abstract-toc/literal.js","../../style-gardener/build/section/abstract-toc/abstract.js","../../style-gardener/build/section/abstract-toc/keywords.js","../../docx-package/build/index.js","../../docx-package/build/docx-package.js","component/cmd-bar/command.ts","component/left-nav/LeftNav.tsx","asset/standard_base64.ts","component/cmd-bar/CommandBar.tsx","component/intro/FormatIntro.tsx","component/intro/LintIntro.tsx","component/intro/ManualIntro.tsx","component/main/Main.tsx","component/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","__webpack_require__","__extends","this","_extendStatics","d","b","setPrototypeOf","__proto__","Array","__","constructor","prototype","create","XmlComponent","_super","tag","_this","call","iter","m_Root","Symbol","iterator","get","enumerable","configurable","next","length","done","PrepareXml","name","m_Tag","type","elements","filter","child","undefined","map","text","attributes","m_Attributes","SetAttributes","attrs","GetAttributes","AddChild","push","Name","Normalize","BaseXmlComponent","module","grid","row","column","xml_component_1","paragraph_prop_1","run_1","Paragraph","m_KeepStyle","GetProperty","m_Property","property","find","ParagraphProperty","unshift","UpdateProperty","index","findIndex","KeepStyle","forEach","e","Run","docx_package_1","DocxPackage","conversion_1","TextToRun","XmlToElement","TextToParagraph","RunText","error","PlainText","join","trim","xml_util_1","Secretary","m_TypeTable","w:p","ParagraphType","bind","w:tbl","TableType","w:sdt","StructureDocTagType","pStyle","style_id","Get","m_DocxStyle","StyleName","pTag","StructureInsight","insight","IsSectionSeparator","DocxStyle","styles_xml","m_Styles","FileToElement","NativeName","OutlineLevel","paragraph_1","Body","IsEmpty","root","includes","i","run_prop_1","prop","RunProperty","m_WhiteList","Set","v","has","TableProperty","docx_ts_1","DefaultGardener","Graft","_a","old","item","paragraph","endsWith","old_element","_i","_b","pattern","test","replace","trimLeft","new_element","Convert","Clone","default_style","style","head","toc","xml_js_1","ElementToXml","js2xml","compact","FilterElement","startsWith","xml_text","xml2js","captureSpacesBetweenElements","xml_file","ElementToFile","declaration","version","encoding","standalone","lodash_1","ExtractElement","HasElement","lodash_2","body_1","Document","GetBody","SetBody","body","immutable_1","Attributes","toJSON","OrderedMap","Text","SetText","GetText","__values","o","table_prop_1","Table","UpdateCellProperty","e_1","e_2","row_1","row_1_1","column_1","column_1_1","cell","e_2_1","return","e_1_1","PropertyItem","SectionGardener","id","item_copy","JSON","parse","stringify","section_1","nav","main","cmdbar","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","result","then","apply","__generator","f","y","t","g","_","label","sent","trys","ops","verb","throw","n","op","TypeError","pop","docx_inject_1","style_sheet_1","style_gardener_1","FormatPackage","input","standard","style_sheet","_c","user_doc","user_styles","user_numbering","grafted","_d","StyleSheet","Read","document_xml","Save","content","InjectPackage","FormatPackageNative","InjectPackageNative","InjectContentTypes","e_input","e_standard","items_set","concat","from","InjectDocPartsRelation","input_targets","target","InjectDocPartsRelationNative","__input","__std","xmls_1","name_1","_e","images_1","name_2","_f","_g","_h","_j","xmls_2","name_3","settings","header1","header2","header1_rel","header1_modified","header2_rel","header2_modified","header_logo","text_1","toLowerCase","ExtractSections","blocks","sections","reduce","prev","curr","search_1","CaptionFieldsRange","complex_start","complex_end","findLastIndex","simple_start","Number","MAX_SAFE_INTEGER","simple_end","MIN_VALUE","start","Math","min","end","max","ExtractCaptionFields","range","slice","ExtractText","ExcludeRun","ExtractPreCaption","raw","pre","ExtractPostCaption","post","caption","ExtractCaption","fields","docx_secretary_1","distiller_1","m_StyleSheet","secretary_1","StdSecretary","UnderstandStyle","section_count_1","block","Insight","Distiller","Distill","docx_style_1","arguments","StdStyle","StyleTable","0","1","2","UserStyle","outline_level","heading 1","heading 2","heading 3","无编号章","论文正文","图片","图片题注","论文表格","表格题注","论文公式","公式题注","参考文献","款","项","中文摘要","中文论文作者","中文论文作者名","中文指导教师","中文指导教师名","中文摘要字面值","中文关键词字面值","英文摘要","英文论文作者","英文论文作者名","英文指导教师","英文指导教师名","英文摘要字面值","英文关键词字面值","native_name","docx_numbering_1","CaptionTable","图","表","公式","NormalTable","\"name\":\"w:drawing\"","\"name\":\"m:oMath\"","PureChapterSet","UserSecretary","m_InsightTable","CaptionType","normal","NormalType","list","ListType","chapter_title","ChapterType","UnderstandNumbering","numbering_xml","m_DocxNumbering","DocxNumbering","key","numPr","level","NumberingType","UpdateInsight","m_Numbering","abstract_id","num_abstract","level_info","table_1","default_1","caption_1","formula_1","raw_1","toc_1","DistillerTable","EchoTable","indexOf","RawTable","table","TableDistiller","CaptionDistiller","formula","FormulaDistiller","TocDistiller","default","DefaultDistiller","RawDistiller","paragraph_style","caption_text","caption_space","repeat","formula_index","backup","main_1","abstract_toc_1","IndexTable","abstract_toc","Index","section_name","sections_length","__document","Import","old_body","secretary","new_body","AbstractTocGardener","section","main_toc","MainGardener","attributes_1","component_factory_1","component","ComponentFactory","CreateComponent","component_table_1","property_item_1","ComponentTable","class","document_1","w:document","w:body","w:pPr","w:r","w:rPr","w:t","w:tblPr","unknown_1","GardenerTable","CaptionGardener","FormulaGardener","TableGardener","unknown","UnknownGardener","components","section_2","FillHole","hole","splice","ClearHole","caption_style","pre_caption","post_caption","formula_style","table_style","table_prop","paragraph_prop","title_1","entity_1","literal_1","abstract_1","keywords_1","ExtractAbstract","__start","__end","ExtractAbstractCn","ExtractAbstractEn","ExtractKeywords","ExtractKeywordsCn","ExtractKeywordsEn","meta","title_cn","title_en","author_cn","author_en","tutor_cn","tutor_en","title_index","author_index","tutor_index","ExtractMeta","TitleGardener","title","EntityGardener","author_name_cn","NameGardener","tutor_name_cn","literal_abstract_cn","LiteralGardener","abstract_cn","AbstractGardener","abstract","literal_keywords_cn","keywords_cn","KeywordsGardener","keywords","author_name_en","tutor_name_en","literal_abstract_en","abstract_en","literal_keywords_en","keywords_en","TocGardener","abstract_toc_section","JsZip","package_content_table","content_types","doc_parts_rel","theme","document","numbering","font_table","styles","foot_notes","end_notes","literal_header_logo","FromArrayBuffer","buffer","loadAsync","m_Package","ToArrayBuffer","generateAsync","path","files","async","console","log","file","LeftNav","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","ev","dispatch","link_key","react_default","a","createElement","Nav","className","groups","links","url","selectedKey","onLinkClick","OnLinkClick","Component","__LeftNav","connect","state","standard_base64","_callee","user_buffer","file_name","user","regenerator_default","wrap","_context","decode","t0","save","t1","t2","stop","cmd_button_styles","backgroundColor","padding","CommandBar","getElementById","click","reader","FileReader","onload","_x","_x2","_Format","Format","reset","readAsArrayBuffer","onChange","OnUploadFile","display","CommandBarButton","iconProps","iconName","onClick","OnClickUpload","FormatIntro","LintIntro","toString","ManualIntro","Main","FormatIntro_FormatIntro","LintIntro_LintIntro","ManualIntro_ManualIntro","CommandBar_CommandBar","DisplayCmdBar","DisplayIntro","__Main","App","dir","Boolean","window","location","hostname","match","initializeIcons","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","app_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.447b1e5f.chunk.js","sourcesContent":["\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./section\"));\n\n__export(require(\"./caption\"));\n\n__export(require(\"./text\"));\n\n__export(require(\"./conversion\"));\n\n__export(require(\"./search\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./document/document\"));\n\n__export(require(\"./document/body\"));\n\n__export(require(\"./paragraph/paragraph\"));\n\n__export(require(\"./paragraph/paragraph-prop\"));\n\n__export(require(\"./paragraph/run/run\"));\n\n__export(require(\"./paragraph/run/run-prop\"));\n\n__export(require(\"./paragraph/run/run-components/text\"));\n\n__export(require(\"./table/table\"));\n\n__export(require(\"./table/table-prop\"));\n\n__export(require(\"./xml-components/attributes\"));\n\n__export(require(\"./xml-components/xml-component\"));\n\n__export(require(\"./xml-components/property-item\"));\n\n__export(require(\"./import-docx/importer\"));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base_1 = require(\"./base\");\n\nvar XmlComponent =\n/** @class */\nfunction (_super) {\n  __extends(XmlComponent, _super);\n\n  function XmlComponent(tag) {\n    var _this = _super.call(this, tag) || this;\n\n    _this.iter = 0;\n    _this.m_Root = new Array();\n    return _this;\n  }\n\n  XmlComponent.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  Object.defineProperty(XmlComponent.prototype, \"root\", {\n    get: function get() {\n      return this.m_Root;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XmlComponent.prototype.next = function () {\n    if (this.iter < this.m_Root.length && this.m_Root[this.iter] instanceof XmlComponent) {\n      return {\n        done: false,\n        value: this.m_Root[this.iter++]\n      };\n    } else {\n      this.iter = 0;\n      return {\n        done: true,\n        value: null\n      };\n    }\n  };\n\n  XmlComponent.prototype.PrepareXml = function () {\n    return {\n      name: this.m_Tag,\n      type: \"element\",\n      elements: this.m_Root.filter(function (child) {\n        return child !== undefined && child !== null;\n      }).map(function (child) {\n        return child instanceof XmlComponent ? child.PrepareXml() : {\n          type: \"text\",\n          text: child\n        };\n      }),\n      attributes: this.m_Attributes.PrepareXml()\n    };\n  };\n\n  XmlComponent.prototype.SetAttributes = function (attrs) {\n    this.m_Attributes.SetAttributes(attrs || {});\n    return this;\n  };\n\n  XmlComponent.prototype.GetAttributes = function () {\n    return this.m_Attributes.PrepareXml();\n  };\n\n  XmlComponent.prototype.AddChild = function (child) {\n    this.m_Root.push(child);\n    return this;\n  };\n\n  XmlComponent.prototype.Name = function () {\n    return this.m_Tag;\n  };\n\n  XmlComponent.prototype.Normalize = function () {};\n\n  return XmlComponent;\n}(base_1.BaseXmlComponent);\n\nexports.XmlComponent = XmlComponent;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"app_grid__2kz_q\",\"row\":\"app_row__aP2F5\",\"column\":\"app_column__27NmA\"};","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar paragraph_prop_1 = require(\"./paragraph-prop\");\n\nvar run_1 = require(\"./run/run\");\n\nvar Paragraph =\n/** @class */\nfunction (_super) {\n  __extends(Paragraph, _super);\n\n  function Paragraph() {\n    var _this = _super.call(this, \"w:p\") || this;\n\n    _this.m_KeepStyle = false;\n    return _this;\n  }\n\n  Paragraph.prototype.GetProperty = function () {\n    // property must be the first child element of paragraph?\n    if (!this.m_Property) {\n      var property = this.m_Root.find(function (child) {\n        return child instanceof paragraph_prop_1.ParagraphProperty;\n      });\n\n      if (property) {\n        this.m_Property = property;\n        return this.m_Property;\n      }\n\n      this.m_Property = new paragraph_prop_1.ParagraphProperty();\n      this.m_Root.unshift(this.m_Property);\n    }\n\n    return this.m_Property;\n  };\n\n  Paragraph.prototype.UpdateProperty = function (property) {\n    // if prop is added in importing phrase and this.m_Property is not set\n    var index = this.m_Root.findIndex(function (child) {\n      return child instanceof paragraph_prop_1.ParagraphProperty;\n    });\n\n    if (index !== -1) {\n      delete this.m_Root[index];\n    }\n\n    this.m_Property = property;\n    this.m_Root.unshift(this.m_Property);\n  };\n\n  Paragraph.prototype.KeepStyle = function () {\n    this.m_KeepStyle = true;\n  };\n\n  Paragraph.prototype.Normalize = function () {\n    if (!this.m_KeepStyle) {\n      this.m_Root.forEach(function (e) {\n        if (e instanceof run_1.Run) {\n          e.Normalize();\n        }\n      });\n    }\n  };\n\n  Paragraph.prototype.PrepareXml = function () {\n    return _super.prototype.PrepareXml.call(this);\n  };\n\n  return Paragraph;\n}(xml_component_1.XmlComponent);\n\nexports.Paragraph = Paragraph;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-driver\"));\n\nvar docx_package_1 = require(\"docx-package\");\n\nexports.DocxPackage = docx_package_1.DocxPackage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar conversion_1 = require(\"./conversion\"); //\n\n\nfunction TextToRun(text) {\n  return conversion_1.XmlToElement(\"<w:r><w:t xml:space=\\\"preserve\\\">\" + text + \"</w:t></w:r>\");\n}\n\nexports.TextToRun = TextToRun;\n\nfunction TextToParagraph(text) {\n  return conversion_1.XmlToElement(\"<w:p><w:r><w:t xml:space=\\\"preserve\\\">\" + text + \"</w:t></w:r></w:p>\");\n}\n\nexports.TextToParagraph = TextToParagraph; // e is w:r\n\nfunction RunText(e) {\n  try {\n    return e.elements.find(function (e) {\n      return e.name === \"w:t\";\n    }).elements.find(function (e) {\n      return e.type === \"text\";\n    }).text;\n  } catch (error) {\n    return \"\";\n  }\n}\n\nexports.RunText = RunText; // e is w:p, join text in w:t element\n\nfunction PlainText(e) {\n  return e.elements.filter(function (e) {\n    return e.name === \"w:r\";\n  }).map(function (e) {\n    return e.elements.find(function (e) {\n      return e.name === \"w:t\";\n    });\n  }).filter(function (e) {\n    return e;\n  }).map(function (e) {\n    return e.elements.find(function (e) {\n      return e.type === \"text\";\n    });\n  }).map(function (e) {\n    return e.text;\n  }).join(\"\").trim();\n}\n\nexports.PlainText = PlainText;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar Secretary =\n/** @class */\nfunction () {\n  function Secretary() {\n    this.m_TypeTable = {\n      \"w:p\": this.ParagraphType.bind(this),\n      \"w:tbl\": this.TableType.bind(this),\n      \"w:sdt\": this.StructureDocTagType.bind(this)\n    };\n  }\n\n  Secretary.prototype.ParagraphType = function (e) {\n    try {\n      var pStyle = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:pStyle\";\n      });\n      var style_id = xml_util_1.Get(pStyle, [\"attributes\", \"w:val\"], \"\");\n      return this.m_DocxStyle.StyleName(style_id);\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  Secretary.prototype.StructureDocTagType = function (e) {\n    try {\n      var pTag = e.elements.find(function (e) {\n        return e.name === \"w:sdtPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:docPartObj\";\n      }).elements.find(function (e) {\n        return e.name === \"w:docPartGallery\";\n      });\n      var name_1 = xml_util_1.Get(pTag, [\"attributes\", \"w:val\"], \"\");\n      return name_1 === \"Table of Contents\" ? \"toc\" : \"normal\";\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  Secretary.prototype.TableType = function (e) {\n    return \"table\";\n  };\n\n  Secretary.prototype.StructureInsight = function (e) {\n    var insight = {\n      type: \"normal\"\n    };\n\n    if (xml_util_1.IsSectionSeparator(e)) {\n      insight.type = \"section\";\n      return insight;\n    }\n\n    if (e.name in this.m_TypeTable) {\n      insight.type = this.m_TypeTable[e.name](e);\n      return insight;\n    }\n\n    return insight;\n  };\n\n  return Secretary;\n}();\n\nexports.Secretary = Secretary;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar DocxStyle =\n/** @class */\nfunction () {\n  function DocxStyle(styles_xml) {\n    this.m_Styles = xml_util_1.FileToElement(styles_xml);\n  }\n\n  DocxStyle.prototype.NativeName = function (style_id) {\n    try {\n      return this.m_Styles.elements.find(function (e) {\n        return e.attributes && e.attributes[\"w:styleId\"] === style_id;\n      }).elements.find(function (e) {\n        return e.name === \"w:name\";\n      }).attributes[\"w:val\"];\n    } catch (error) {\n      return \"\";\n    }\n  };\n\n  DocxStyle.prototype.OutlineLevel = function (style_id) {\n    try {\n      return this.m_Styles.elements.find(function (e) {\n        return e.attributes && e.attributes[\"w:styleId\"] === style_id;\n      }).elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:outlineLvl\";\n      }).attributes[\"w:val\"];\n    } catch (error) {\n      return \"\";\n    }\n  };\n\n  return DocxStyle;\n}();\n\nexports.DocxStyle = DocxStyle;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar paragraph_1 = require(\"../paragraph/paragraph\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar Body =\n/** @class */\nfunction (_super) {\n  __extends(Body, _super);\n\n  function Body() {\n    return _super.call(this, \"w:body\") || this;\n  }\n\n  Body.prototype.IsEmpty = function (e) {\n    if (e.Name() !== \"w:p\") {\n      return false;\n    }\n\n    if (!e.root.find(function (child) {\n      return child instanceof xml_component_1.XmlComponent && (child.Name() === \"w:r\" || child.Name().includes(\"Math\"));\n    }) && !xml_util_1.IsSectionSeparator(e.PrepareXml())) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Body.prototype.Normalize = function () {\n    var _this = this;\n\n    this.m_Root.forEach(function (e, i) {\n      if (_this.IsEmpty(e)) {\n        _this.m_Root[i] = null;\n      } else if (e instanceof paragraph_1.Paragraph) {\n        e.Normalize();\n      }\n    });\n  };\n\n  Body.prototype.PrepareXml = function () {\n    this.Normalize();\n    return _super.prototype.PrepareXml.call(this);\n  };\n\n  return Body;\n}(xml_component_1.XmlComponent);\n\nexports.Body = Body;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar ParagraphProperty =\n/** @class */\nfunction (_super) {\n  __extends(ParagraphProperty, _super);\n\n  function ParagraphProperty() {\n    return _super.call(this, \"w:pPr\") || this;\n  }\n\n  return ParagraphProperty;\n}(xml_component_1.XmlComponent);\n\nexports.ParagraphProperty = ParagraphProperty;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../../xml-components/xml-component\");\n\nvar run_prop_1 = require(\"./run-prop\");\n\nvar Run =\n/** @class */\nfunction (_super) {\n  __extends(Run, _super);\n\n  function Run() {\n    return _super.call(this, \"w:r\") || this;\n  }\n\n  Run.prototype.Normalize = function () {\n    var prop = this.m_Root.find(function (e) {\n      return e instanceof run_prop_1.RunProperty;\n    });\n    prop && prop.Normalize();\n  };\n\n  return Run;\n}(xml_component_1.XmlComponent);\n\nexports.Run = Run;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../../xml-components/xml-component\");\n\nvar RunProperty =\n/** @class */\nfunction (_super) {\n  __extends(RunProperty, _super);\n\n  function RunProperty() {\n    var _this = _super.call(this, \"w:rPr\") || this;\n\n    _this.m_WhiteList = new Set([\"w:noProof\", \"w:vertAlign\"]);\n    return _this;\n  }\n\n  RunProperty.prototype.Normalize = function () {\n    var _this = this;\n\n    this.m_Root.forEach(function (v, i) {\n      if (v instanceof xml_component_1.XmlComponent && !_this.m_WhiteList.has(v.Name())) {\n        _this.m_Root[i] = null;\n      }\n    });\n  };\n\n  return RunProperty;\n}(xml_component_1.XmlComponent);\n\nexports.RunProperty = RunProperty;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar TableProperty =\n/** @class */\nfunction (_super) {\n  __extends(TableProperty, _super);\n\n  function TableProperty() {\n    return _super.call(this, \"w:tblPr\") || this;\n  }\n\n  return TableProperty;\n}(xml_component_1.XmlComponent);\n\nexports.TableProperty = TableProperty;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.DefaultGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item,\n        type = _a.type;\n\n    try {\n      var paragraph = null;\n\n      if (type.endsWith(\"_title\")) {\n        var old_element = old.PrepareXml();\n        var text = xml_util_1.PlainText(old_element);\n\n        for (var _i = 0, _b = [/^.+\\..+\\..+\\s+/, /^.+\\..+\\s+/, /^\\d+\\s*/, /^第.+章\\s*/, /^#\\s*/]; _i < _b.length; _i++) {\n          var pattern = _b[_i];\n\n          if (pattern.test(text)) {\n            text = text.replace(pattern, \"\").trimLeft();\n            break;\n          }\n        }\n\n        var new_element = xml_util_1.TextToParagraph(text);\n        paragraph = docx_ts_1.Convert(new_element);\n      } else {\n        paragraph = docx_ts_1.Clone(old);\n      }\n\n      var default_style = item.style;\n      var prop = docx_ts_1.Convert(default_style);\n      paragraph.UpdateProperty(prop);\n      return paragraph;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n    }\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"manual_head__N8vIi\",\"toc\":\"manual_toc__3XS79\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_js_1 = require(\"xml-js\"); // xml_text likes <w:p ...> ... </w:p>\n\n\nfunction XmlToElement(xml_text) {\n  try {\n    var e = xml_js_1.xml2js(xml_text, {\n      compact: false,\n      captureSpacesBetweenElements: true\n    }).elements[0];\n    return FilterElement(e);\n  } catch (error) {\n    return null;\n  }\n}\n\nexports.XmlToElement = XmlToElement; // exclude xml head\n\nfunction FileToElement(xml_file) {\n  try {\n    var raw = xml_js_1.xml2js(xml_file, {\n      compact: false,\n      captureSpacesBetweenElements: true\n    });\n    var filtered = FilterElement(raw);\n    return filtered.elements[0];\n  } catch (error) {\n    return null;\n  }\n}\n\nexports.FileToElement = FileToElement;\n\nfunction ElementToFile(e) {\n  return XmlHead() + \"\\r\\n\" + ElementToXml(e);\n}\n\nexports.ElementToFile = ElementToFile; // element likes {\"name\":...,\"type\":...}\n\nfunction ElementToXml(e) {\n  return xml_js_1.js2xml({\n    elements: [e]\n  }, {\n    compact: false\n  });\n}\n\nexports.ElementToXml = ElementToXml; //\n\nfunction FilterElement(e) {\n  if (e.elements) {\n    e.elements = e.elements.filter(function (e) {\n      return e.type !== \"text\" || !e.text.startsWith(\"\\r\\n\") && !e.text.startsWith(\"\\n\");\n    });\n    e.elements.forEach(function (e) {\n      FilterElement(e);\n    });\n  }\n\n  return e;\n}\n\nfunction XmlHead() {\n  return xml_js_1.js2xml({\n    declaration: {\n      attributes: {\n        version: \"1.0\",\n        encoding: \"UTF-8\",\n        standalone: \"yes\"\n      }\n    }\n  }, {\n    compact: false\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nfunction ExtractElement(_a) {\n  var name = _a.name,\n      prop = _a.prop,\n      value = _a.value,\n      e = _a.e;\n  var result = e.elements.find(function (e) {\n    return e.name === name && lodash_1.get(e, [\"attributes\", prop], \"\") === value;\n  });\n  return result || null;\n}\n\nexports.ExtractElement = ExtractElement;\n\nfunction HasElement(_a) {\n  var name = _a.name,\n      prop = _a.prop,\n      value = _a.value,\n      e = _a.e;\n  return ExtractElement({\n    name: name,\n    prop: prop,\n    value: value,\n    e: e\n  }) !== null;\n}\n\nexports.HasElement = HasElement;\n\nvar lodash_2 = require(\"lodash\");\n\nexports.Get = lodash_2.get;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./secretary\"));\n\n__export(require(\"./std-secretary\"));\n\n__export(require(\"./user-secretary\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-style\"));\n\n__export(require(\"./user-style\"));\n\n__export(require(\"./std-style\"));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar body_1 = require(\"./body\");\n\nvar Document =\n/** @class */\nfunction (_super) {\n  __extends(Document, _super);\n\n  function Document() {\n    return _super.call(this, \"w:document\") || this;\n  }\n\n  Document.prototype.GetBody = function () {\n    return this.m_Root.find(function (e) {\n      return e instanceof body_1.Body;\n    });\n  };\n\n  Document.prototype.SetBody = function (body) {\n    this.m_Root[0] = body;\n  };\n\n  return Document;\n}(xml_component_1.XmlComponent);\n\nexports.Document = Document;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar immutable_1 = require(\"immutable\");\n\nvar Attributes =\n/** @class */\nfunction () {\n  function Attributes(attrs) {\n    this.SetAttributes(attrs);\n  }\n\n  Attributes.prototype.PrepareXml = function () {\n    return this.m_Attributes.toJSON();\n  };\n\n  Attributes.prototype.SetAttributes = function (attrs) {\n    this.m_Attributes = immutable_1.OrderedMap(attrs);\n  };\n\n  return Attributes;\n}();\n\nexports.Attributes = Attributes;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../../../xml-components/xml-component\");\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    return _super.call(this, \"w:t\") || this;\n  }\n\n  Text.prototype.SetText = function (text) {\n    this.m_Root[0] = text;\n    return this;\n  };\n\n  Text.prototype.GetText = function () {\n    return this.m_Root[0] || \"\";\n  };\n\n  return Text;\n}(xml_component_1.XmlComponent);\n\nexports.Text = Text;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar table_prop_1 = require(\"./table-prop\");\n\nvar paragraph_1 = require(\"../paragraph/paragraph\");\n\nvar Table =\n/** @class */\nfunction (_super) {\n  __extends(Table, _super);\n\n  function Table() {\n    return _super.call(this, \"w:tbl\") || this;\n  }\n\n  Table.prototype.GetProperty = function () {\n    // property must be the first child element of table?\n    if (!this.m_Property) {\n      var property = this.m_Root.find(function (child) {\n        return child instanceof table_prop_1.TableProperty;\n      });\n\n      if (property) {\n        this.m_Property = property;\n        return this.m_Property;\n      }\n\n      this.m_Property = new table_prop_1.TableProperty();\n      this.m_Root.unshift(this.m_Property);\n    }\n\n    return this.m_Property;\n  };\n\n  Table.prototype.UpdateProperty = function (property) {\n    // if prop is added in importing phrase and this.m_Property is not set\n    var index = this.m_Root.findIndex(function (child) {\n      return child instanceof table_prop_1.TableProperty;\n    });\n\n    if (index !== -1) {\n      delete this.m_Root[index];\n    }\n\n    this.m_Property = property;\n    this.m_Root.unshift(this.m_Property);\n  };\n\n  Table.prototype.UpdateCellProperty = function (property) {\n    this.m_Root.forEach(function (e) {\n      var e_1, _a, e_2, _b;\n\n      if (e && e instanceof xml_component_1.XmlComponent) {\n        var row = e;\n\n        if (row.Name() === \"w:tr\") {\n          try {\n            for (var row_1 = __values(row), row_1_1 = row_1.next(); !row_1_1.done; row_1_1 = row_1.next()) {\n              var column = row_1_1.value;\n\n              if (column.Name() === \"w:tc\") {\n                try {\n                  for (var column_1 = __values(column), column_1_1 = column_1.next(); !column_1_1.done; column_1_1 = column_1.next()) {\n                    var cell = column_1_1.value;\n\n                    if (cell instanceof paragraph_1.Paragraph) {\n                      cell.UpdateProperty(property);\n                    }\n                  }\n                } catch (e_2_1) {\n                  e_2 = {\n                    error: e_2_1\n                  };\n                } finally {\n                  try {\n                    if (column_1_1 && !column_1_1.done && (_b = column_1.return)) _b.call(column_1);\n                  } finally {\n                    if (e_2) throw e_2.error;\n                  }\n                }\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (row_1_1 && !row_1_1.done && (_a = row_1.return)) _a.call(row_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n        }\n      }\n    });\n  };\n\n  return Table;\n}(xml_component_1.XmlComponent);\n\nexports.Table = Table;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"./xml-component\"); // property item is the default with assumption that has no child element, but it can have children\n// it can also be general tag that not important enough to deserve a standalone class\n\n\nvar PropertyItem =\n/** @class */\nfunction (_super) {\n  __extends(PropertyItem, _super);\n\n  function PropertyItem(tag) {\n    return _super.call(this, tag) || this;\n  }\n\n  return PropertyItem;\n}(xml_component_1.XmlComponent);\n\nexports.PropertyItem = PropertyItem;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.SectionGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item,\n        id = _a.id;\n\n    if (!item) {\n      return null;\n    }\n\n    var item_copy = JSON.parse(JSON.stringify(item));\n\n    try {\n      if (item_copy.style.name === \"w:sectPr\" && item_copy.style.elements[0].name === \"w:headerReference\") {\n        var header_ref = item_copy.style.elements[0];\n        header_ref.attributes[\"r:id\"] = id;\n      } else if (item_copy.style.name === \"w:p\" && item_copy.style.elements[0].elements[1].name === \"w:sectPr\") {\n        var section_1 = item_copy.style.elements[0].elements[1];\n\n        if (section_1.elements[0].name === \"w:headerReference\") {\n          var header_ref = section_1.elements[0];\n          header_ref.attributes[\"r:id\"] = id;\n        }\n      } // TODO: use general prop item or section component?\n\n\n      var section = docx_ts_1.Convert(item_copy.style);\n      return section;\n    } catch (error) {\n      return docx_ts_1.Convert(item_copy.style);\n    }\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__SysaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2wMeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cmdbar\":\"cmdbar_cmdbar__15GKK\"};","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_inject_1 = require(\"docx-inject\");\n\nvar style_sheet_1 = require(\"style-sheet\");\n\nvar style_gardener_1 = require(\"style-gardener\"); // input will be modified\n\n\nfunction FormatPackage(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var style_sheet, _b, _c, user_doc, user_styles, user_numbering, grafted;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _b = style_sheet_1.StyleSheet.bind;\n          _c = {};\n          return [4\n          /*yield*/\n          , standard.Read(\"styles\")];\n\n        case 1:\n          _c.styles_xml = _d.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"document\")];\n\n        case 2:\n          style_sheet = new (_b.apply(style_sheet_1.StyleSheet, [void 0, (_c.document_xml = _d.sent(), _c)]))();\n          return [4\n          /*yield*/\n          , input.Read(\"document\")];\n\n        case 3:\n          user_doc = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"styles\")];\n\n        case 4:\n          user_styles = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"numbering\")];\n\n        case 5:\n          user_numbering = _d.sent();\n          grafted = style_gardener_1.Graft({\n            style_sheet: style_sheet,\n            user_doc: user_doc,\n            user_numbering: user_numbering,\n            user_styles: user_styles\n          });\n          input.Save({\n            content: grafted,\n            name: \"document\"\n          }); // caution! the order matters\n          // if you inject package first, you will lost original user style \n\n          return [4\n          /*yield*/\n          , docx_inject_1.InjectPackage({\n            input: input,\n            standard: standard\n          })];\n\n        case 6:\n          // caution! the order matters\n          // if you inject package first, you will lost original user style \n          _d.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.FormatPackage = FormatPackage; //\n\nfunction FormatPackageNative(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var style_sheet, _b, _c, user_doc, user_styles, user_numbering, grafted, reg_left, reg_right;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _b = style_sheet_1.StyleSheet.bind;\n          _c = {};\n          return [4\n          /*yield*/\n          , standard.Read(\"styles\")];\n\n        case 1:\n          _c.styles_xml = _d.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"document\")];\n\n        case 2:\n          style_sheet = new (_b.apply(style_sheet_1.StyleSheet, [void 0, (_c.document_xml = _d.sent(), _c)]))();\n          return [4\n          /*yield*/\n          , input.Read(\"document\")];\n\n        case 3:\n          user_doc = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"styles\")];\n\n        case 4:\n          user_styles = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"numbering\")];\n\n        case 5:\n          user_numbering = _d.sent();\n          grafted = style_gardener_1.Graft({\n            style_sheet: style_sheet,\n            user_doc: user_doc,\n            user_numbering: user_numbering,\n            user_styles: user_styles\n          });\n          reg_left = \"<w:rPr/><w:t>\\u201C</w:t>\";\n          grafted = grafted.replace(reg_left, \"<w:rPr><w:rFonts w:hint=\\\"eastAsia\\\"/></w:rPr><w:t>\\u201C</w:t>\");\n          reg_right = \"<w:rPr/><w:t>\\u201D</w:t>\";\n          grafted = grafted.replace(reg_right, \"<w:rPr><w:rFonts w:hint=\\\"eastAsia\\\"/></w:rPr><w:t>\\u201D</w:t>\");\n          input.Save({\n            content: grafted,\n            name: \"document\"\n          }); // caution! the order matters\n          // if you inject package first, you will lost original user style \n\n          return [4\n          /*yield*/\n          , docx_inject_1.InjectPackageNative({\n            input: input,\n            standard: standard\n          })];\n\n        case 6:\n          // caution! the order matters\n          // if you inject package first, you will lost original user style \n          _d.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.FormatPackageNative = FormatPackageNative;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-inject\"));","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nfunction InjectContentTypes(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  var e_input = xml_util_1.FileToElement(input);\n  var e_standard = xml_util_1.FileToElement(standard); // TODO: we need better set!!\n\n  var items_set = new Set(e_input.elements.map(function (e) {\n    return JSON.stringify(e);\n  }).concat(e_standard.elements.map(function (e) {\n    return JSON.stringify(e);\n  })));\n  e_input.elements = Array.from(items_set).map(function (e) {\n    return JSON.parse(e);\n  });\n  return xml_util_1.ElementToFile(e_input);\n}\n\nexports.InjectContentTypes = InjectContentTypes;\n\nfunction InjectDocPartsRelation(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  var e_input = xml_util_1.FileToElement(input);\n  var e_standard = xml_util_1.FileToElement(standard);\n  var input_targets = new Set(e_input.elements.map(function (e) {\n    return e.attributes[\"Target\"];\n  }));\n  var image_type = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\n  e_standard.elements.forEach(function (e) {\n    var target = e.attributes[\"Target\"];\n\n    if (target.startsWith(\"header\")) {\n      // TODO: what happens when same target with different id?\n      e_input.elements.push(e); // if (input_targets.has(target))\n      // {\n      // }\n      // else\n      // {\n      // }\n    } else if (!input_targets.has(target) && e.attributes[\"Type\"] !== image_type) {\n      e.attributes[\"Id\"] = \"rId\" + (e_input.elements.length + 1);\n      e_input.elements.push(e);\n    }\n  });\n  return xml_util_1.ElementToFile(e_input);\n}\n\nexports.InjectDocPartsRelation = InjectDocPartsRelation;\n\nfunction InjectPackage(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var __input, __std, result, __input, __std, result, xmls, _i, xmls_1, name_1, _b, _c, _d, images, _e, images_1, name_2, _f, _g, _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , input.Read(\"content_types\")];\n\n        case 1:\n          __input = _j.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"content_types\")];\n\n        case 2:\n          __std = _j.sent();\n          result = InjectContentTypes({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"content_types\"\n          });\n          return [4\n          /*yield*/\n          , input.Read(\"doc_parts_rel\")];\n\n        case 3:\n          __input = _j.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"doc_parts_rel\")];\n\n        case 4:\n          __std = _j.sent();\n          result = InjectDocPartsRelation({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"doc_parts_rel\"\n          });\n          xmls = [\"numbering\", \"foot_notes\", \"end_notes\", \"theme\", \"styles\", \"font_table\", \"header1\", \"header2\", \"header1_rel\", \"header2_rel\"];\n          _i = 0, xmls_1 = xmls;\n          _j.label = 5;\n\n        case 5:\n          if (!(_i < xmls_1.length)) return [3\n          /*break*/\n          , 8];\n          name_1 = xmls_1[_i];\n          _c = (_b = input).Save;\n          _d = {};\n          return [4\n          /*yield*/\n          , standard.Read(name_1)];\n\n        case 6:\n          _c.apply(_b, [(_d.content = _j.sent(), _d.name = name_1, _d)]);\n\n          _j.label = 7;\n\n        case 7:\n          _i++;\n          return [3\n          /*break*/\n          , 5];\n\n        case 8:\n          images = [\"header_logo\"];\n          _e = 0, images_1 = images;\n          _j.label = 9;\n\n        case 9:\n          if (!(_e < images_1.length)) return [3\n          /*break*/\n          , 12];\n          name_2 = images_1[_e];\n          _g = (_f = input).Save;\n          _h = {};\n          return [4\n          /*yield*/\n          , standard.Read(name_2, \"arraybuffer\")];\n\n        case 10:\n          _g.apply(_f, [(_h.content = _j.sent(), _h.name = name_2, _h)]);\n\n          _j.label = 11;\n\n        case 11:\n          _e++;\n          return [3\n          /*break*/\n          , 9];\n\n        case 12:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.InjectPackage = InjectPackage; // use native id instead hardcode id by hand\n\nfunction InjectDocPartsRelationNative(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  var e_input = xml_util_1.FileToElement(input);\n  var e_standard = xml_util_1.FileToElement(standard);\n  var input_targets = new Set(e_input.elements.map(function (e) {\n    return e.attributes[\"Target\"];\n  }));\n  var image_type = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\n  e_standard.elements.forEach(function (e) {\n    var target = e.attributes[\"Target\"];\n\n    if (target.startsWith(\"header\")) {\n      // TODO: what happens when same target with different id?\n      // eg. there is header in input file\n      e.attributes[\"Id\"] = target.replace(\".xml\", \"\");\n      e_input.elements.push(e);\n    } else if (!input_targets.has(target) && e.attributes[\"Type\"] !== image_type) {\n      e.attributes[\"Id\"] = \"rId\" + (e_input.elements.length + 1);\n      e_input.elements.push(e);\n    }\n  });\n  return xml_util_1.ElementToFile(e_input);\n}\n\nexports.InjectDocPartsRelationNative = InjectDocPartsRelationNative;\n\nfunction InjectPackageNative(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var __input, __std, result, __input, __std, result, xmls, _i, xmls_2, name_3, _b, _c, _d, settings, _e, header1, header2, header1_rel, header1_modified, header2_rel, header2_modified, header_logo;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , input.Read(\"content_types\")];\n\n        case 1:\n          __input = _f.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"content_types\")];\n\n        case 2:\n          __std = _f.sent();\n          result = InjectContentTypes({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"content_types\"\n          });\n          return [4\n          /*yield*/\n          , input.Read(\"doc_parts_rel\")];\n\n        case 3:\n          __input = _f.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"doc_parts_rel\")];\n\n        case 4:\n          __std = _f.sent();\n          result = InjectDocPartsRelationNative({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"doc_parts_rel\"\n          });\n          xmls = [\"numbering\", // \"foot_notes\",\n          // \"end_notes\",\n          \"theme\", \"styles\", \"font_table\"];\n          _i = 0, xmls_2 = xmls;\n          _f.label = 5;\n\n        case 5:\n          if (!(_i < xmls_2.length)) return [3\n          /*break*/\n          , 8];\n          name_3 = xmls_2[_i];\n          _c = (_b = input).Save;\n          _d = {};\n          return [4\n          /*yield*/\n          , standard.Read(name_3)];\n\n        case 6:\n          _c.apply(_b, [(_d.content = _f.sent(), _d.name = name_3, _d)]);\n\n          _f.label = 7;\n\n        case 7:\n          _i++;\n          return [3\n          /*break*/\n          , 5];\n\n        case 8:\n          _e = xml_util_1.FileToElement;\n          return [4\n          /*yield*/\n          , standard.Read(\"settings\")];\n\n        case 9:\n          settings = _e.apply(void 0, [_f.sent()]);\n          settings.elements.push(xml_util_1.XmlToElement(\"<w:updateFields w:val=\\\"true\\\" />\"));\n          input.Save({\n            content: xml_util_1.ElementToFile(settings),\n            name: \"settings\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header1\")];\n\n        case 10:\n          header1 = _f.sent();\n          input.Save({\n            content: header1.replace(\"r:embed=\\\"rId1\\\"\", \"r:embed=\\\"header_logo\\\"\"),\n            name: \"header1\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header2\")];\n\n        case 11:\n          header2 = _f.sent();\n          input.Save({\n            content: header2.replace(\"r:embed=\\\"rId1\\\"\", \"r:embed=\\\"header_logo\\\"\"),\n            name: \"header2\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header1_rel\")];\n\n        case 12:\n          header1_rel = _f.sent();\n          header1_modified = header1_rel.replace(\"Id=\\\"rId1\\\"\", \"Id=\\\"header_logo\\\"\").replace(\"Target=\\\"media/image1.png\\\"\", \"Target=\\\"media/header_logo.png\\\"\");\n          input.Save({\n            content: header1_modified,\n            name: \"header1_rel\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header2_rel\")];\n\n        case 13:\n          header2_rel = _f.sent();\n          header2_modified = header2_rel.replace(\"Id=\\\"rId1\\\"\", \"Id=\\\"header_logo\\\"\").replace(\"Target=\\\"media/image1.png\\\"\", \"Target=\\\"media/header_logo.png\\\"\");\n          input.Save({\n            content: header2_modified,\n            name: \"header2_rel\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header_logo\", \"arraybuffer\")];\n\n        case 14:\n          header_logo = _f.sent();\n          input.Save({\n            content: header_logo,\n            name: \"literal_header_logo\"\n          });\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.InjectPackageNative = InjectPackageNative;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar text_1 = require(\"./text\");\n\nfunction IsSectionSeparator(e) {\n  var text = text_1.PlainText(e).toLowerCase();\n  return JSON.stringify(e).includes('\"name\":\"w:sectPr\"') || text.startsWith(\"keywords:\");\n}\n\nexports.IsSectionSeparator = IsSectionSeparator;\n\nfunction ExtractSections(blocks) {\n  var sections = blocks.reduce(function (prev, curr) {\n    prev[prev.length - 1].push(curr);\n\n    if (IsSectionSeparator(curr)) {\n      prev.push([]);\n    }\n\n    return prev;\n  }, [[]]); // remove last empty []\n\n  sections.pop();\n  return sections;\n}\n\nexports.ExtractSections = ExtractSections;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar search_1 = require(\"./search\");\n\nvar lodash_1 = require(\"lodash\");\n\nvar text_1 = require(\"./text\");\n\n; // range in [start,end)\n\n;\n;\n; // fields in a w:p is whatever between the first field begin(or fldSimple) and the last field(or fldSimple) end\n\nfunction CaptionFieldsRange(e) {\n  // complex field implementation start\n  var complex_start = e.elements.findIndex(function (e) {\n    return e.name === \"w:r\" && search_1.HasElement({\n      name: \"w:fldChar\",\n      prop: \"w:fldCharType\",\n      value: \"begin\",\n      e: e\n    });\n  });\n  var complex_end = lodash_1.findLastIndex(e.elements, function (e) {\n    return e.name === \"w:r\" && search_1.HasElement({\n      name: \"w:fldChar\",\n      prop: \"w:fldCharType\",\n      value: \"end\",\n      e: e\n    });\n  }); // simple field imple\n\n  var simple_start = e.elements.findIndex(function (e) {\n    return e.name === \"w:fldSimple\";\n  });\n  simple_start === -1 && (simple_start = Number.MAX_SAFE_INTEGER);\n  var simple_end = lodash_1.findLastIndex(e.elements, function (e) {\n    return e.name === \"w:fldSimple\";\n  });\n  simple_end === -1 && (simple_end = Number.MIN_VALUE); //\n\n  var start = Math.min(simple_start, complex_start);\n  var end = Math.max(simple_end, complex_end) + 1;\n  return {\n    start: start,\n    end: end\n  };\n}\n\nexports.CaptionFieldsRange = CaptionFieldsRange;\n\nfunction ExtractCaptionFields(e) {\n  var range = CaptionFieldsRange(e);\n  return e.elements.slice(range.start, range.end);\n}\n\nexports.ExtractCaptionFields = ExtractCaptionFields;\n\nfunction ExtractText(elements) {\n  var text = elements.reduce(function (prev, curr) {\n    return curr.name === \"w:r\" ? prev + text_1.RunText(curr) : prev + \"\";\n  }, \"\");\n  return text ? text_1.TextToRun(text) : null;\n}\n\nfunction ExcludeRun(elements) {\n  return elements.map(function (e) {\n    return e.name === \"w:r\" ? null : e;\n  });\n}\n\nfunction ExtractPreCaption(e) {\n  var range = CaptionFieldsRange(e);\n  var raw = e.elements.slice(0, range.start);\n  return {\n    pre: ExcludeRun(raw),\n    label: ExtractText(raw)\n  };\n}\n\nexports.ExtractPreCaption = ExtractPreCaption;\n\nfunction ExtractPostCaption(e) {\n  var range = CaptionFieldsRange(e);\n  var raw = e.elements.slice(range.end);\n  return {\n    post: ExcludeRun(raw),\n    caption: ExtractText(raw)\n  };\n}\n\nexports.ExtractPostCaption = ExtractPostCaption;\n\nfunction ExtractCaption(e) {\n  return {\n    pre: ExtractPreCaption(e),\n    fields: ExtractCaptionFields(e),\n    post: ExtractPostCaption(e)\n  };\n}\n\nexports.ExtractCaption = ExtractCaption;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar style_sheet_1 = require(\"./style-sheet\");\n\nexports.StyleSheet = style_sheet_1.StyleSheet;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_secretary_1 = require(\"docx-secretary\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar distiller_1 = require(\"./distillers/distiller\");\n\nvar StyleSheet =\n/** @class */\nfunction () {\n  function StyleSheet(_a) {\n    var styles_xml = _a.styles_xml,\n        document_xml = _a.document_xml;\n\n    var _this = this;\n\n    this.m_StyleSheet = {};\n\n    try {\n      var secretary_1 = new docx_secretary_1.StdSecretary();\n      secretary_1.UnderstandStyle(styles_xml);\n      var body = xml_util_1.FileToElement(document_xml).elements[0];\n      var section_count_1 = 0;\n      body.elements.forEach(function (block, i) {\n        var type = secretary_1.Insight(block).type;\n\n        if (type === \"section\") {\n          _this.m_StyleSheet[\"\" + type + section_count_1] = distiller_1.Distiller.Distill(block, type);\n          section_count_1 += 1;\n        } else if (!(type in _this.m_StyleSheet)) {\n          _this.m_StyleSheet[type] = distiller_1.Distiller.Distill(block, type);\n        }\n      });\n    } catch (error) {}\n  }\n\n  StyleSheet.prototype.Get = function (type) {\n    return this.m_StyleSheet[type] || null;\n  };\n\n  return StyleSheet;\n}();\n\nexports.StyleSheet = StyleSheet;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar secretary_1 = require(\"./secretary\");\n\nvar docx_style_1 = require(\"docx-style\");\n\nvar StdSecretary =\n/** @class */\nfunction (_super) {\n  __extends(StdSecretary, _super);\n\n  function StdSecretary() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StdSecretary.prototype.UnderstandStyle = function (styles_xml) {\n    this.m_DocxStyle = new docx_style_1.StdStyle(styles_xml);\n    return this;\n  };\n\n  StdSecretary.prototype.Insight = function (e) {\n    return _super.prototype.StructureInsight.call(this, e);\n  };\n\n  return StdSecretary;\n}(secretary_1.Secretary);\n\nexports.StdSecretary = StdSecretary;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_style_1 = require(\"./docx-style\");\n\nvar StyleTable = {\n  \"0\": \"chapter_title\",\n  \"1\": \"section_title\",\n  \"2\": \"subsection_title\"\n};\n\nvar UserStyle =\n/** @class */\nfunction (_super) {\n  __extends(UserStyle, _super);\n\n  function UserStyle(styles_xml) {\n    return _super.call(this, styles_xml) || this;\n  }\n\n  UserStyle.prototype.StyleName = function (style_id) {\n    //\n    var outline_level = _super.prototype.OutlineLevel.call(this, style_id);\n\n    if (outline_level) {\n      return StyleTable[outline_level] || \"normal\";\n    } //\n\n\n    var name = _super.prototype.NativeName.call(this, style_id);\n\n    if (name === \"caption\") {\n      return \"caption\";\n    } else if (name === \"List Paragraph\") {\n      return \"list\";\n    }\n\n    return \"normal\";\n  };\n\n  return UserStyle;\n}(docx_style_1.DocxStyle);\n\nexports.UserStyle = UserStyle;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_style_1 = require(\"./docx-style\");\n\nvar StyleTable = {\n  \"heading 1\": \"chapter_title\",\n  \"heading 2\": \"section_title\",\n  \"heading 3\": \"subsection_title\",\n  \"无编号章\": \"pure_chapter\",\n  \"论文正文\": \"normal\",\n  \"图片\": \"figure\",\n  \"图片题注\": \"figure_caption\",\n  \"论文表格\": \"table\",\n  \"表格题注\": \"table_caption\",\n  \"论文公式\": \"formula\",\n  \"公式题注\": \"formula_caption\",\n  \"参考文献\": \"reference\",\n  \"款\": \"item\",\n  \"项\": \"subitem\",\n  \"中文摘要\": \"title_cn\",\n  \"中文论文作者\": \"author_cn\",\n  \"中文论文作者名\": \"author_name_cn\",\n  \"中文指导教师\": \"tutor_cn\",\n  \"中文指导教师名\": \"tutor_name_cn\",\n  \"中文摘要字面值\": \"literal_abstract_cn\",\n  \"中文关键词字面值\": \"literal_keywords_cn\",\n  \"英文摘要\": \"title_en\",\n  \"英文论文作者\": \"author_en\",\n  \"英文论文作者名\": \"author_name_en\",\n  \"英文指导教师\": \"tutor_en\",\n  \"英文指导教师名\": \"tutor_name_en\",\n  \"英文摘要字面值\": \"literal_abstract_en\",\n  \"英文关键词字面值\": \"literal_keywords_en\"\n};\n\nvar StdStyle =\n/** @class */\nfunction (_super) {\n  __extends(StdStyle, _super);\n\n  function StdStyle(styles_xml) {\n    return _super.call(this, styles_xml) || this;\n  }\n\n  StdStyle.prototype.StyleName = function (style_id) {\n    var native_name = _super.prototype.NativeName.call(this, style_id);\n\n    return StyleTable[native_name] || \"normal\";\n  };\n\n  return StdStyle;\n}(docx_style_1.DocxStyle);\n\nexports.StdStyle = StdStyle;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar secretary_1 = require(\"./secretary\");\n\nvar docx_style_1 = require(\"docx-style\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar docx_numbering_1 = require(\"docx-numbering\");\n\nvar CaptionTable = {\n  \"图\": \"figure_caption\",\n  \"表\": \"table_caption\",\n  \"公式\": \"formula_caption\"\n};\nvar NormalTable = {\n  '\"name\":\"w:drawing\"': \"figure\",\n  '\"name\":\"m:oMath\"': \"formula\"\n};\nvar PureChapterSet = new Set([\"参考文献\", \"结论\", \"致谢\", \"附录\", \"总结与展望\"]);\n\nvar UserSecretary =\n/** @class */\nfunction (_super) {\n  __extends(UserSecretary, _super);\n\n  function UserSecretary() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.m_InsightTable = {\n      \"caption\": _this.CaptionType.bind(_this),\n      \"normal\": _this.NormalType.bind(_this),\n      \"list\": _this.ListType.bind(_this),\n      \"chapter_title\": _this.ChapterType.bind(_this)\n    };\n    return _this;\n  }\n\n  UserSecretary.prototype.UnderstandStyle = function (styles_xml) {\n    this.m_DocxStyle = new docx_style_1.UserStyle(styles_xml);\n    return this;\n  };\n\n  UserSecretary.prototype.UnderstandNumbering = function (numbering_xml) {\n    this.m_DocxNumbering = new docx_numbering_1.DocxNumbering(numbering_xml);\n    return this;\n  };\n\n  UserSecretary.prototype.CaptionType = function (e) {\n    for (var key in CaptionTable) {\n      if (xml_util_1.PlainText(e).startsWith(key)) {\n        return CaptionTable[key];\n      }\n    }\n\n    return \"normal\";\n  };\n\n  UserSecretary.prototype.ChapterType = function (e) {\n    var text = xml_util_1.PlainText(e);\n\n    if (PureChapterSet.has(text)) {\n      return \"pure_chapter\";\n    } else {\n      return \"chapter_title\";\n    }\n  };\n\n  UserSecretary.prototype.NormalType = function (e) {\n    for (var key in NormalTable) {\n      // TODO: improve the performace with some deep-search lib!\n      if (JSON.stringify(e).includes(key)) {\n        if (NormalTable[key] === \"formula\") {\n          if (xml_util_1.PlainText(e) === \"\") {\n            return \"formula\";\n          } else {\n            return \"normal\";\n          }\n        }\n\n        return NormalTable[key];\n      }\n    }\n\n    var text = xml_util_1.PlainText(e);\n\n    if (/^\\d+\\s+.+$/.test(text) || /^第.章\\s+.+$/.test(text) || /^#\\s*.+$/.test(text)) {\n      return \"chapter_title\";\n    } else if (/^.\\..\\s+.+$/.test(text) || /^##\\s*.+$/.test(text)) {\n      return \"section_title\";\n    } else if (/^.\\..\\..\\s+.+$/.test(text) || /^###\\s*.+$/.test(text)) {\n      return \"subsection_title\";\n    } else if (PureChapterSet.has(text)) {\n      return \"pure_chapter\";\n    }\n\n    return \"normal\";\n  };\n\n  UserSecretary.prototype.ListType = function (e) {\n    try {\n      var numPr = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:numPr\";\n      });\n      var level = numPr.elements.find(function (e) {\n        return e.name === \"w:ilvl\";\n      }).attributes[\"w:val\"];\n      var id = numPr.elements.find(function (e) {\n        return e.name === \"w:numId\";\n      }).attributes[\"w:val\"];\n      var type = this.m_DocxNumbering.NumberingType({\n        level: level,\n        id: id\n      });\n      return type;\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  UserSecretary.prototype.UpdateInsight = function (insight, e) {\n    if (insight.type in this.m_InsightTable) {\n      insight.type = this.m_InsightTable[insight.type](e);\n    }\n\n    return insight;\n  };\n\n  UserSecretary.prototype.Insight = function (e) {\n    var insight = _super.prototype.StructureInsight.call(this, e);\n\n    return this.UpdateInsight(insight, e);\n  };\n\n  return UserSecretary;\n}(secretary_1.Secretary);\n\nexports.UserSecretary = UserSecretary;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-numbering\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar DocxNumbering =\n/** @class */\nfunction () {\n  function DocxNumbering(numbering_xml) {\n    this.m_Numbering = xml_util_1.FileToElement(numbering_xml);\n  }\n\n  DocxNumbering.prototype.NumberingType = function (_a) {\n    var level = _a.level,\n        id = _a.id;\n\n    try {\n      var num_instance = xml_util_1.ExtractElement({\n        name: \"w:num\",\n        prop: \"w:numId\",\n        value: id,\n        e: this.m_Numbering\n      });\n      var abstract_id = num_instance.elements.find(function (e) {\n        return e.name === \"w:abstractNumId\";\n      }).attributes[\"w:val\"];\n      var num_abstract = xml_util_1.ExtractElement({\n        name: \"w:abstractNum\",\n        prop: \"w:abstractNumId\",\n        value: abstract_id,\n        e: this.m_Numbering\n      });\n      var level_info = xml_util_1.ExtractElement({\n        name: \"w:lvl\",\n        prop: \"w:ilvl\",\n        value: level,\n        e: num_abstract\n      });\n      var text = level_info.elements.find(function (e) {\n        return e.name === \"w:lvlText\";\n      }).attributes[\"w:val\"];\n      var format = level_info.elements.find(function (e) {\n        return e.name === \"w:numFmt\";\n      }).attributes[\"w:val\"];\n\n      if (format === \"decimal\") {\n        switch (text) {\n          case \"[%1]\":\n            return \"reference\";\n\n          case \"%1、\":\n            return \"item\";\n\n          case \"(%1)\":\n            return \"subitem\";\n\n          default:\n            return \"normal\";\n        }\n      }\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  return DocxNumbering;\n}();\n\nexports.DocxNumbering = DocxNumbering;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar table_1 = require(\"./table\");\n\nvar default_1 = require(\"./default\");\n\nvar caption_1 = require(\"./caption\");\n\nvar formula_1 = require(\"./formula\");\n\nvar raw_1 = require(\"./raw\");\n\nvar toc_1 = require(\"./toc\");\n\nexports.Distiller = {\n  Distill: function Distill(e, type) {\n    return DistillerTable[Normalize(type)].Distill(e, type);\n  }\n};\n\nfunction Normalize(type) {\n  if (type.includes(\"caption\")) {\n    return \"caption\";\n  } else if (EchoTable.indexOf(type) !== -1) {\n    return type;\n  } else if (RawTable.indexOf(type) !== -1) {\n    return \"raw\";\n  }\n\n  return \"default\";\n}\n\nvar EchoTable = [\"table\", \"formula\", \"toc\"];\nvar RawTable = [\"author_cn\", \"tutor_cn\", \"literal_abstract_cn\", \"literal_keywords_cn\", \"author_en\", \"tutor_en\", \"literal_abstract_en\", \"literal_keywords_en\", \"section\"];\nvar DistillerTable = {\n  \"table\": table_1.TableDistiller,\n  \"caption\": caption_1.CaptionDistiller,\n  \"formula\": formula_1.FormulaDistiller,\n  \"toc\": toc_1.TocDistiller,\n  \"default\": default_1.DefaultDistiller,\n  \"raw\": raw_1.RawDistiller\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TableDistiller = {\n  Distill: function Distill(e) {\n    try {\n      var style = e.elements.find(function (e) {\n        return e.name === \"w:tblPr\";\n      }) || null; // TODO: assert: there is at least one row and one column in std table\n\n      var paragraph = e.elements.find(function (e) {\n        return e.name === \"w:tr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:tc\";\n      }).elements.find(function (e) {\n        return e.name === \"w:p\";\n      });\n      var paragraph_style = paragraph.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null;\n      return {\n        style: style,\n        paragraph_style: paragraph_style\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDistiller = {\n  Distill: function Distill(e) {\n    var std_default = {\n      style: e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null\n    };\n    return std_default;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.CaptionDistiller = {\n  Distill: function Distill(e, type) {\n    try {\n      var style = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null;\n\n      var _a = xml_util_1.ExtractCaption(e),\n          fields = _a.fields,\n          pre = _a.pre,\n          post = _a.post;\n\n      if (type === \"formula_caption\") {\n        return {\n          style: style,\n          label: pre.label,\n          fields: fields,\n          caption: post.caption\n        };\n      } else if (type === \"figure_caption\" || type === \"table_caption\") {\n        var caption_text = xml_util_1.RunText(post.caption);\n        var caption_space = xml_util_1.TextToRun(\" \".repeat(caption_text.length - caption_text.trimLeft().length));\n        return {\n          style: style,\n          label: pre.label,\n          fields: fields,\n          caption_space: caption_space\n        };\n      }\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormulaDistiller = {\n  Distill: function Distill(e) {\n    try {\n      var formula_index = e.elements.findIndex(function (e) {\n        return e.name === \"m:oMathPara\";\n      });\n      formula_index === -1 && (formula_index = e.elements.findIndex(function (e) {\n        return e.name === \"m:oMath\";\n      })); // start from 1, to exclude style def\n\n      var style = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null;\n      var pre = e.elements.slice(1, formula_index);\n      var post = e.elements.slice(formula_index + 1);\n      return {\n        style: style,\n        pre: pre,\n        post: post\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RawDistiller = {\n  Distill: function Distill(e) {\n    return {\n      style: e\n    };\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TocDistiller = {\n  Distill: function Distill(e) {\n    try {\n      var backup = JSON.parse(JSON.stringify(e));\n      var content = backup.elements.find(function (e) {\n        return e.name === \"w:sdtContent\";\n      }); //\n\n      content.elements = content.elements.filter(function (e, i) {\n        if (e.elements && e.elements.find(function (e) {\n          return e.name === \"w:hyperlink\";\n        }) && i !== 1) {\n          return false;\n        }\n\n        return true;\n      }); //\n\n      content.elements[1].elements.pop();\n      return {\n        style: backup\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./gardener\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar docx_secretary_1 = require(\"docx-secretary\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar main_1 = require(\"./section/main/main\");\n\nvar abstract_toc_1 = require(\"./section/abstract-toc/abstract-toc\");\n\nvar IndexTable = {\n  \"abstract_toc\": 0,\n  \"main\": 1\n};\n\nfunction Index(section_name, sections_length) {\n  if (sections_length === 1) {\n    return 0;\n  } else if (section_name in IndexTable) {\n    return IndexTable[section_name];\n  }\n}\n\nfunction Graft(_a) {\n  var style_sheet = _a.style_sheet,\n      user_doc = _a.user_doc,\n      user_styles = _a.user_styles,\n      user_numbering = _a.user_numbering;\n\n  var __document = docx_ts_1.Import(user_doc);\n\n  var old_body = __document.GetBody();\n\n  var sections = xml_util_1.ExtractSections(old_body.PrepareXml().elements);\n  var secretary = new docx_secretary_1.UserSecretary().UnderstandStyle(user_styles).UnderstandNumbering(user_numbering);\n  var new_body = new docx_ts_1.Body();\n\n  if (sections.length > 1) {\n    var abstract_toc = sections[Index(\"abstract_toc\", sections.length)];\n    abstract_toc && abstract_toc_1.AbstractTocGardener.Graft({\n      style_sheet: style_sheet,\n      section: abstract_toc\n    }).forEach(function (e) {\n      return new_body.AddChild(e);\n    });\n  }\n\n  var main_toc = sections[Index(\"main\", sections.length)];\n  main_toc && main_1.MainGardener.Graft({\n    style_sheet: style_sheet,\n    section: main_toc,\n    secretary: secretary\n  }).forEach(function (e) {\n    return new_body.AddChild(e);\n  });\n\n  __document.SetBody(new_body);\n\n  return xml_util_1.ElementToFile(__document.PrepareXml());\n}\n\nexports.Graft = Graft;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar attributes_1 = require(\"./attributes\");\n\nvar BaseXmlComponent =\n/** @class */\nfunction () {\n  function BaseXmlComponent(tag) {\n    this.m_Tag = tag;\n    this.m_Attributes = new attributes_1.Attributes({});\n  }\n\n  return BaseXmlComponent;\n}();\n\nexports.BaseXmlComponent = BaseXmlComponent;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_factory_1 = require(\"../xml-components/component-factory\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nfunction Clone(old) {\n  return Convert(old.PrepareXml());\n}\n\nexports.Clone = Clone;\n\nfunction Convert(e) {\n  var component = component_factory_1.ComponentFactory.CreateComponent(e);\n  e.elements && e.elements.forEach(function (child) {\n    if (child.type === \"element\") {\n      component.AddChild(Convert(child));\n    } else if (child.type === \"text\") {\n      component.AddChild(child.text);\n    }\n  });\n  return component;\n}\n\nexports.Convert = Convert;\n\nfunction Import(xml_text) {\n  return Convert(xml_util_1.FileToElement(xml_text));\n}\n\nexports.Import = Import;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_table_1 = require(\"./component-table\");\n\nvar property_item_1 = require(\"./property-item\");\n\nvar ComponentFactory =\n/** @class */\nfunction () {\n  function ComponentFactory() {}\n\n  ComponentFactory.CreateComponent = function (e) {\n    var name = e.name;\n\n    if (!(name in component_table_1.ComponentTable)) {\n      // throw or not?\n      // throw `component ${name} is not supported!`;\n      // return as property item\n      return new property_item_1.PropertyItem(name).SetAttributes(e.attributes);\n    }\n\n    var component = new component_table_1.ComponentTable[name].class().SetAttributes(e.attributes);\n    return component;\n  };\n\n  return ComponentFactory;\n}();\n\nexports.ComponentFactory = ComponentFactory;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar document_1 = require(\"../document/document\");\n\nvar body_1 = require(\"../document/body\");\n\nvar paragraph_1 = require(\"../paragraph/paragraph\");\n\nvar run_1 = require(\"../paragraph/run/run\");\n\nvar text_1 = require(\"../paragraph/run/run-components/text\");\n\nvar paragraph_prop_1 = require(\"../paragraph/paragraph-prop\");\n\nvar run_prop_1 = require(\"../paragraph/run/run-prop\");\n\nvar table_1 = require(\"../table/table\");\n\nvar table_prop_1 = require(\"../table/table-prop\"); // table for most important component\n\n\nexports.ComponentTable = {\n  \"w:document\": {\n    class: document_1.Document\n  },\n  \"w:body\": {\n    class: body_1.Body\n  },\n  \"w:p\": {\n    class: paragraph_1.Paragraph\n  },\n  \"w:pPr\": {\n    class: paragraph_prop_1.ParagraphProperty\n  },\n  \"w:r\": {\n    class: run_1.Run\n  },\n  \"w:rPr\": {\n    class: run_prop_1.RunProperty\n  },\n  \"w:t\": {\n    class: text_1.Text\n  },\n  \"w:tbl\": {\n    class: table_1.Table\n  },\n  \"w:tblPr\": {\n    class: table_prop_1.TableProperty\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar caption_1 = require(\"./caption\");\n\nvar formula_1 = require(\"./formula\");\n\nvar default_1 = require(\"./default\");\n\nvar table_1 = require(\"./table\");\n\nvar unknown_1 = require(\"./unknown\");\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar section_1 = require(\"../abstract-toc/section\");\n\nfunction Normalize(name, type) {\n  switch (name) {\n    case \"w:p\":\n      if (type.includes(\"caption\")) {\n        return \"caption\";\n      } else {\n        return type === \"formula\" ? type : \"default\";\n      }\n\n    case \"w:tbl\":\n      return \"table\";\n\n    default:\n      return \"unknown\";\n  }\n}\n\nvar GardenerTable = {\n  \"caption\": caption_1.CaptionGardener,\n  \"formula\": formula_1.FormulaGardener,\n  \"default\": default_1.DefaultGardener,\n  \"table\": table_1.TableGardener,\n  \"unknown\": unknown_1.UnknownGardener\n};\nexports.MainGardener = {\n  Graft: function Graft(_a) {\n    var style_sheet = _a.style_sheet,\n        section = _a.section,\n        secretary = _a.secretary;\n    var components = [];\n\n    for (var _i = 0, section_2 = section; _i < section_2.length; _i++) {\n      var block = section_2[_i];\n      var insight = secretary.Insight(block);\n\n      if (insight.type === \"section\") {\n        var grafted = section_1.SectionGardener.Graft({\n          item: style_sheet.Get(\"section1\"),\n          id: \"header2\"\n        });\n        components.push(grafted);\n      } else {\n        var style = style_sheet.Get(insight.type);\n        var grafted = GardenerTable[Normalize(block.name, insight.type)].Graft({\n          old: docx_ts_1.Convert(block),\n          item: style,\n          type: insight.type\n        });\n        components.push(grafted);\n      }\n    }\n\n    return components.filter(function (e) {\n      return e !== null;\n    });\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nfunction FillHole(elements, e) {\n  var backup = elements.map(function (e) {\n    return e;\n  });\n  var hole = backup.findIndex(function (e) {\n    return e === null;\n  });\n\n  if (hole === -1) {\n    backup.push(e);\n  } else {\n    backup.splice(hole, 0, e);\n  }\n\n  return backup;\n}\n\nfunction ClearHole(elements) {\n  return elements.filter(function (e) {\n    return e !== null;\n  });\n}\n\nexports.CaptionGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item,\n        type = _a.type;\n\n    try {\n      var p = old.PrepareXml();\n      var caption_style = item;\n      var _b = caption_style.caption_space,\n          caption_space = _b === void 0 ? null : _b,\n          _c = caption_style.caption,\n          caption = _c === void 0 ? null : _c; //\n\n      var _d = xml_util_1.ExtractCaption(p),\n          pre_caption = _d.pre,\n          post_caption = _d.post;\n\n      pre_caption.pre = FillHole(pre_caption.pre, caption_style.label);\n      pre_caption.pre = ClearHole(pre_caption.pre); // in formula caption, caption is null, and thus there is no hole in post\n\n      !post_caption.caption && post_caption.post.unshift(null);\n      caption_space && (post_caption.post = FillHole(post_caption.post, caption_space));\n      caption && (post_caption.caption = caption);\n      post_caption.caption = xml_util_1.TextToRun(xml_util_1.RunText(post_caption.caption).trim());\n      post_caption.post = FillHole(post_caption.post, post_caption.caption);\n      post_caption.post = ClearHole(post_caption.post);\n      p.elements = pre_caption.pre.concat(caption_style.fields, post_caption.post); //\n\n      var paragraph = docx_ts_1.Convert(p);\n      var prop = docx_ts_1.Convert(caption_style.style);\n      paragraph.UpdateProperty(prop);\n      return paragraph;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.FormulaGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item;\n\n    try {\n      //\n      var p = old.PrepareXml();\n      var formula = p.elements.find(function (e) {\n        return e.name === \"m:oMathPara\";\n      });\n      !formula && (formula = p.elements.find(function (e) {\n        return e.name === \"m:oMath\";\n      })); //\n\n      var formula_style = item;\n      p.elements = formula_style.pre.concat([formula], formula_style.post); //\n\n      var paragraph = docx_ts_1.Convert(p);\n      var prop = docx_ts_1.Convert(formula_style.style);\n      paragraph.UpdateProperty(prop);\n      return paragraph;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.TableGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item;\n\n    try {\n      var table = docx_ts_1.Clone(old);\n      var table_style = item;\n      var table_prop = docx_ts_1.Convert(table_style.style);\n      table.UpdateProperty(table_prop);\n      var paragraph_prop = docx_ts_1.Convert(table_style.paragraph_style);\n      table.UpdateCellProperty(paragraph_prop);\n      return table;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n      ;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.UnknownGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old;\n\n    try {\n      var unknown = docx_ts_1.Clone(old);\n      return unknown;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar toc_1 = require(\"./toc\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar title_1 = require(\"./title\");\n\nvar entity_1 = require(\"./entity\");\n\nvar name_1 = require(\"./name\");\n\nvar section_1 = require(\"./section\");\n\nvar literal_1 = require(\"./literal\");\n\nvar abstract_1 = require(\"./abstract\");\n\nvar keywords_1 = require(\"./keywords\");\n\nfunction ExtractMeta(section) {\n  var meta = {\n    \"title_cn\": \"未识别的标题\",\n    \"title_en\": \"unknown title\",\n    \"author_cn\": \"未识别的作者\",\n    \"author_en\": \"unknown author\",\n    \"tutor_cn\": \"未识别的指导教师\",\n    \"tutor_en\": \"unknown tutor\"\n  };\n\n  try {\n    var title_index = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(\"论文题目：\");\n    });\n\n    if (title_index !== -1) {\n      meta[\"title_cn\"] = xml_util_1.PlainText(section[title_index + 1]).trim();\n      meta[\"title_en\"] = xml_util_1.PlainText(section[title_index + 2]).trim();\n    }\n\n    var author_index = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(\"学生：\");\n    });\n\n    if (author_index !== -1) {\n      meta[\"author_cn\"] = xml_util_1.PlainText(section[author_index + 1]).trim();\n      meta[\"author_en\"] = xml_util_1.PlainText(section[author_index + 2]).trim();\n    }\n\n    var tutor_index = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(\"指导教师：\");\n    });\n\n    if (tutor_index !== -1) {\n      meta[\"tutor_cn\"] = xml_util_1.PlainText(section[tutor_index + 1]).trim();\n      meta[\"tutor_en\"] = xml_util_1.PlainText(section[tutor_index + 2]).trim();\n    }\n  } catch (error) {}\n\n  return meta;\n}\n\nfunction ExtractAbstract(_a) {\n  var section = _a.section,\n      start = _a.start,\n      end = _a.end;\n\n  try {\n    // ignore user typed abstract literal\n    var __start = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e) === start;\n    }) + 1; // TODO:the empty line before keywords should be supplyed by user?\n\n\n    var __end = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(end);\n    });\n\n    var abstract_cn = section.slice(__start, __end);\n    return abstract_cn;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction ExtractAbstractCn(section) {\n  return ExtractAbstract({\n    section: section,\n    start: \"摘要\",\n    end: \"关键字：\"\n  });\n}\n\nfunction ExtractAbstractEn(section) {\n  return ExtractAbstract({\n    section: section,\n    start: \"Abstract\",\n    end: \"Keywords:\"\n  });\n}\n\nfunction ExtractKeywords(_a) {\n  var section = _a.section,\n      start = _a.start;\n\n  try {\n    var e = section.find(function (e) {\n      return xml_util_1.PlainText(e).startsWith(start);\n    });\n    var keywords = xml_util_1.PlainText(e).replace(start, \"\");\n    return keywords;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction ExtractKeywordsCn(section) {\n  return ExtractKeywords({\n    section: section,\n    start: \"关键字：\"\n  });\n}\n\nfunction ExtractKeywordsEn(section) {\n  return ExtractKeywords({\n    section: section,\n    start: \"Keywords:\"\n  });\n}\n\nexports.AbstractTocGardener = {\n  Graft: function Graft(_a) {\n    var style_sheet = _a.style_sheet,\n        section = _a.section; //\n\n    var meta = ExtractMeta(section); //\n\n    var title_cn = title_1.TitleGardener.Graft({\n      item: style_sheet.Get(\"title_cn\"),\n      title: meta.title_cn\n    });\n    var author_cn = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"author_cn\")\n    });\n    var author_name_cn = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"author_name_cn\"),\n      name: meta.author_cn\n    });\n    var tutor_cn = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"tutor_cn\")\n    });\n    var tutor_name_cn = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"tutor_name_cn\"),\n      name: meta.tutor_cn\n    });\n    var literal_abstract_cn = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_abstract_cn\")\n    });\n    var abstract_cn = abstract_1.AbstractGardener.Graft({\n      abstract: ExtractAbstractCn(section),\n      item: style_sheet.Get(\"normal\")\n    });\n    var literal_keywords_cn = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_keywords_cn\")\n    });\n    var keywords_cn = keywords_1.KeywordsGardener.Graft({\n      keywords: ExtractKeywordsCn(section),\n      item: style_sheet.Get(\"normal\")\n    }); //\n\n    var title_en = title_1.TitleGardener.Graft({\n      item: style_sheet.Get(\"title_en\"),\n      title: meta.title_en\n    });\n    var author_en = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"author_en\")\n    });\n    var author_name_en = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"author_name_en\"),\n      name: meta.author_en\n    });\n    var tutor_en = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"tutor_en\")\n    });\n    var tutor_name_en = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"tutor_name_en\"),\n      name: meta.tutor_en\n    });\n    var literal_abstract_en = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_abstract_en\")\n    });\n    var abstract_en = abstract_1.AbstractGardener.Graft({\n      abstract: ExtractAbstractEn(section),\n      item: style_sheet.Get(\"normal\")\n    });\n    var literal_keywords_en = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_keywords_en\")\n    });\n    var keywords_en = keywords_1.KeywordsGardener.Graft({\n      keywords: ExtractKeywordsEn(section),\n      item: style_sheet.Get(\"normal\")\n    }); //\n\n    var toc = toc_1.TocGardener.Graft({\n      item: style_sheet.Get(\"toc\")\n    });\n    var abstract_toc_section = section_1.SectionGardener.Graft({\n      item: style_sheet.Get(\"section0\"),\n      id: \"header1\"\n    }); //\n\n    var grafted = [title_cn, author_cn, author_name_cn, tutor_cn, tutor_name_cn, literal_abstract_cn].concat(abstract_cn, [literal_keywords_cn, keywords_cn, title_en, author_en, author_name_en, tutor_en, tutor_name_en, literal_abstract_en], abstract_en, [literal_keywords_en, keywords_en, toc, abstract_toc_section]).filter(function (e) {\n      return e !== null;\n    });\n    return grafted;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.TocGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item;\n\n    try {\n      // TODO: use general prop item or TOC component?\n      var toc = docx_ts_1.Convert(item.style);\n      return toc;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.TitleGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item,\n        title = _a.title;\n\n    try {\n      var p = docx_ts_1.Convert(xml_util_1.TextToParagraph(title));\n      p.UpdateProperty(docx_ts_1.Convert(item.style));\n      return p;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.EntityGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item;\n\n    try {\n      var p = docx_ts_1.Convert(item.style); // caution! \n      // keep style because something such as aligning text(in 4 characters distance)... etc\n      // has nothing to do with style and it belongs to DIRECT style\n\n      p.KeepStyle();\n      return p;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.NameGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item,\n        name = _a.name;\n\n    try {\n      var p = docx_ts_1.Convert(xml_util_1.TextToParagraph(name));\n      p.UpdateProperty(docx_ts_1.Convert(item.style));\n      return p;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.LiteralGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item;\n\n    try {\n      return docx_ts_1.Convert(item.style);\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar default_1 = require(\"../main/default\");\n\nexports.AbstractGardener = {\n  Graft: function Graft(_a) {\n    var abstract = _a.abstract,\n        item = _a.item;\n\n    try {\n      var result = abstract.map(function (e) {\n        return default_1.DefaultGardener.Graft({\n          old: docx_ts_1.Convert(e),\n          item: item,\n          type: \"normal\"\n        });\n      });\n      return result;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar default_1 = require(\"../main/default\");\n\nexports.KeywordsGardener = {\n  Graft: function Graft(_a) {\n    var keywords = _a.keywords,\n        item = _a.item;\n\n    if (!keywords) {\n      return null;\n    }\n\n    try {\n      var component = default_1.DefaultGardener.Graft({\n        old: docx_ts_1.Convert(xml_util_1.TextToParagraph(keywords)),\n        item: item\n      });\n      return component;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-package\"));","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar JsZip = require(\"jszip\"); // name: path\n\n\nvar package_content_table = {\n  \"content_types\": \"[Content_Types].xml\",\n  \"doc_parts_rel\": \"word/_rels/document.xml.rels\",\n  \"theme\": \"word/theme/theme1.xml\",\n  \"document\": \"word/document.xml\",\n  \"settings\": \"word/settings.xml\",\n  \"numbering\": \"word/numbering.xml\",\n  \"font_table\": \"word/fontTable.xml\",\n  \"styles\": \"word/styles.xml\",\n  \"foot_notes\": \"word/footnotes.xml\",\n  \"end_notes\": \"word/endnotes.xml\",\n  \"header1\": \"word/header1.xml\",\n  \"header2\": \"word/header2.xml\",\n  \"header1_rel\": \"word/_rels/header1.xml.rels\",\n  \"header2_rel\": \"word/_rels/header2.xml.rels\",\n  \"header_logo\": \"word/media/image1.png\",\n  \"literal_header_logo\": \"word/media/header_logo.png\"\n};\n\nvar DocxPackage =\n/** @class */\nfunction () {\n  function DocxPackage() {}\n\n  DocxPackage.prototype.FromArrayBuffer = function (buffer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , JsZip.loadAsync(buffer)];\n\n          case 1:\n            _a.m_Package = _b.sent();\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  DocxPackage.prototype.ToArrayBuffer = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.m_Package.generateAsync({\n              type: \"arraybuffer\"\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  DocxPackage.prototype.Read = function (name, type) {\n    if (type === void 0) {\n      type = \"text\";\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var path, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            path = package_content_table[name];\n            return [4\n            /*yield*/\n            , this.m_Package.files[path].async(type)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 2:\n            error_1 = _a.sent();\n            console.log(\"invalid name \" + name + \" in reading xml of docx\");\n            return [2\n            /*return*/\n            , null];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DocxPackage.prototype.Save = function (_a) {\n    var content = _a.content,\n        name = _a.name;\n    var path = package_content_table[name];\n\n    if (path && content) {\n      this.m_Package.file(path, content);\n    } else {\n      console.log(\"invalid name \" + name + \" in saving xml of docx\");\n    }\n\n    return this;\n  };\n\n  return DocxPackage;\n}();\n\nexports.DocxPackage = DocxPackage;","import { FormatPackageNative, DocxPackage } from \"docx-driver\";\r\nimport { decode } from \"base64-arraybuffer\";\r\nimport { standard_base64 } from \"../../asset/standard_base64\";\r\nimport save from \"save-file/browser\";\r\n\r\nlet standard: DocxPackage;\r\n\r\nexport async function Format(user_buffer: ArrayBuffer, file_name: string)\r\n{\r\n    if (!standard)\r\n    {\r\n        standard = await new DocxPackage().FromArrayBuffer(decode(standard_base64) as ArrayBuffer);\r\n    }\r\n    const user = await new DocxPackage().FromArrayBuffer(user_buffer);\r\n    await FormatPackageNative({ standard, input: user });\r\n    await save(await user.ToArrayBuffer(), `${file_name.replace(\".docx\", \"\")}.formatted.docx`);\r\n}","import React, { Component } from 'react';\r\nimport { Nav, INavLink } from 'office-ui-fabric-react';\r\nimport styles from \"./nav.module.css\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass LeftNav extends Component\r\n{\r\n    constructor(props: any)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    OnLinkClick(ev?: React.MouseEvent<HTMLElement>, item?: INavLink) \r\n    {\r\n        (this.props as any).dispatch({ type: \"navigation\", link_key: (item as INavLink).key });\r\n    };\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Nav className={styles.nav}\r\n                groups={[\r\n                    {\r\n                        links: [\r\n                            { name: '排版', url: '#', key: 'format' },\r\n                            // { name: '格式检查', url: '#', key: 'lint' },\r\n                            { name: '使用手册', url: '#', key: 'manual' }\r\n                        ]\r\n                    }\r\n                ]}\r\n                selectedKey={(this.props as any).link_key || \"format\"}\r\n                onLinkClick={this.OnLinkClick.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: any) =>\r\n{\r\n    return { link_key: state.link_key }\r\n}\r\n\r\nconst __LeftNav = connect(MapStateToProps)(LeftNav);\r\nexport { __LeftNav as LeftNav };\r\n","const standard_base64 = \"\";\nexport {standard_base64};","import React, { Component } from 'react';\r\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\r\nimport styles from \"./cmdbar.module.css\";\r\nimport { Format } from './command';\r\n\r\nconst cmd_button_styles = { root: { backgroundColor: \"white\", padding: \"8px\" } };\r\n\r\nclass CommandBar extends Component\r\n{\r\n    OnClickUpload()\r\n    {\r\n        const upload = document.getElementById(\"upload\") as HTMLInputElement;\r\n        upload.click();\r\n    }\r\n\r\n    OnUploadFile(e: any)\r\n    {\r\n        const files = (e.target as HTMLInputElement).files as FileList;\r\n        if (files.length === 1)\r\n        {\r\n            const file = files[0];\r\n            const file_name = file.name;\r\n            console.log(`upload ${file_name}...`);\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = () =>\r\n            {\r\n                const buffer = reader.result;\r\n                Format(buffer as ArrayBuffer, file_name);\r\n                (document.getElementById(\"form\") as HTMLFormElement).reset();\r\n            };\r\n            reader.readAsArrayBuffer(file);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className={styles.cmdbar}>\r\n                <form id=\"form\">\r\n                    <input type=\"file\" id=\"upload\" onChange={this.OnUploadFile.bind(this)} style={{ display: \"none\" }} />\r\n                </form>\r\n                <CommandBarButton\r\n                    iconProps={{ iconName: 'OpenFolderHorizontal' }}\r\n                    text=\"打开\"\r\n                    styles={cmd_button_styles}\r\n                    onClick={this.OnClickUpload.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { CommandBar };\r\n","import React, { Component } from 'react';\r\n\r\nclass FormatIntro extends Component\r\n{\r\n    render()\r\n    {\r\n        // TODO: add id?\r\n        return (\r\n            <div>\r\n                <h1 className=\"ms-font-xxl\">排版</h1>\r\n                <p className=\"ms-font-l\">按照使用手册中约定的方式进行输入，选择论文后自动开始排版。</p>\r\n                <p className=\"ms-font-l\">排版完成后浏览器自动下载排版后的论文，文件名默认为*.formatted.docx。</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { FormatIntro };\r\n","import React, { Component } from 'react';\r\n\r\nclass LintIntro extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1 className=\"ms-font-xxl\">格式检查</h1>\r\n                <p className=\"ms-font-l\">选择论文后自动开始检查格式，软件会尽力找出所有排版问题，最终打印论文前请与导师确认。</p>\r\n                <p className=\"ms-font-l\">检查完成后浏览器自动下载检查报告，文件名默认为*.lint.docx。</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { LintIntro };\r\n","import React, { Component } from 'react';\r\nimport { Nav, INavLinkGroup } from 'office-ui-fabric-react';\r\nimport styles from \"./manual.module.css\";\r\n\r\nfunction url(id: number)\r\n{\r\n    return `https://github.com/ianpas/auto-format/issues/${id.toString()}`;\r\n}\r\n\r\nclass ManualIntro extends Component\r\n{\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1 className={`ms-font-xxl ${styles.head}`}>使用手册</h1>\r\n                <p className=\"ms-font-l\">由于希望及时获得使用后的反馈，所以手册以Github Issue的形式写成，以下是手册目录：</p>\r\n\r\n                <h1 className={`ms-font-xxl ${styles.toc}`}>目录</h1>\r\n                <Nav\r\n                    groups={[\r\n                        {\r\n                            links: [\r\n                                { name: \"软件简介\", key: \"8\", url: url(8), target: \"_blank\" },\r\n                                { name: \"如何写摘要\", key: \"1\", url: url(1), target: \"_blank\" },\r\n                                { name: \"如何写新的一章/节/条\", key: \"2\", url: url(2), target: \"_blank\" },\r\n                                { name: \"如何使用图片\", key: \"3\", url: url(3), target: \"_blank\" },\r\n                                { name: \"如何使用表格\", key: \"4\", url: url(4), target: \"_blank\" },\r\n                                { name: \"如何使用公式\", key: \"5\", url: url(5), target: \"_blank\" },\r\n                                { name: \"如何使用款和项\", key: \"6\", url: url(6), target: \"_blank\" },\r\n                                { name: \"如何写参考文献\", key: \"7\", url: url(7), target: \"_blank\" },\r\n                                { name: \"如何添加封面\", key: \"10\", url: url(10), target: \"_blank\" }\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { ManualIntro };\r\n","import React, { Component } from 'react';\r\nimport styles from \"./main.module.css\";\r\nimport { CommandBar } from \"../cmd-bar/CommandBar\";\r\nimport { FormatIntro } from '../intro/FormatIntro';\r\nimport { LintIntro } from '../intro/LintIntro';\r\nimport { ManualIntro } from '../intro/ManualIntro';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Main extends Component\r\n{\r\n\r\n    DisplayIntro()\r\n    {\r\n        switch ((this.props as any).link_key)\r\n        {\r\n            case \"format\":\r\n                return <FormatIntro />;\r\n            case \"lint\":\r\n                return <LintIntro />;\r\n            case \"manual\":\r\n                return <ManualIntro />;\r\n            default:\r\n                return <FormatIntro />;\r\n        }\r\n    }\r\n\r\n    DisplayCmdBar()\r\n    {\r\n        switch ((this.props as any).link_key)\r\n        {\r\n            case \"manual\":\r\n                return null;\r\n            default:\r\n                return <CommandBar />;\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <div className={styles.main}>\r\n                {this.DisplayCmdBar()}\r\n                {this.DisplayIntro()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: any) =>\r\n{\r\n    return { link_key: state.link_key }\r\n}\r\n\r\nconst __Main = connect(MapStateToProps)(Main);\r\nexport { __Main as Main };","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import './App.css';\nimport { LeftNav } from \"../left-nav/LeftNav\";\nimport styles from \"./app.module.css\";\nimport { Main } from \"../main/Main\";\n\nclass App extends Component\n{\n    render()\n    {\n        return (\n            <div className={`ms-Grid ${styles.grid}`} dir=\"ltr\">\n                <div className={`ms-Grid-row ${styles.row}`}>\n                    <div className={`ms-Grid-col ms-sm4 ms-md2 ${styles.column}`}>\n                        <LeftNav />\n                    </div>\n                    <div className={`ms-Grid-col ms-sm8 ms-md10 ${styles.column}`}>\n                        <Main />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\ninitializeIcons();\n\nconst reducer = (state: any, action: any) =>\n{\n    if (action.type === \"navigation\")\n    {\n        return { link_key: action.link_key };\n    }\n    return { link_key: \"format\" };\n};\n\nconst store = createStore(\n    reducer,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
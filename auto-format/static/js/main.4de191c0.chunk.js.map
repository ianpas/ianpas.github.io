{"version":3,"sources":["../../common/xml-util/build/index.js","../../docx-ts/build/index.js","../../docx-ts/build/xml-components/xml-component.js","component/app/app.module.css","../../docx-ts/build/paragraph/paragraph.js","../../docx-driver/build/index.js","../../common/xml-util/build/text.js","../../docx-secretary/build/secretary.js","../../docx-style/build/docx-style.js","../../docx-ts/build/document/body.js","../../docx-ts/build/paragraph/paragraph-prop.js","../../docx-ts/build/paragraph/run/run.js","../../docx-ts/build/paragraph/run/run-prop.js","../../docx-ts/build/table/table-prop.js","../../style-gardener/build/section/main/default.js","component/intro/manual.module.css","../../common/xml-util/build/conversion.js","../../common/xml-util/build/search.js","../../docx-secretary/build/index.js","../../docx-style/build/index.js","../../docx-ts/build/document/document.js","../../docx-ts/build/xml-components/attributes.js","../../docx-ts/build/paragraph/run/run-components/text.js","../../docx-ts/build/table/table.js","../../docx-ts/build/xml-components/property-item.js","../../style-gardener/build/section/abstract-toc/section.js","component/left-nav/nav.module.css","component/main/main.module.css","component/cmd-bar/cmdbar.module.css","../../docx-driver/build/docx-driver.js","../../docx-inject/build/index.js","../../docx-inject/build/docx-inject.js","../../common/xml-util/build/section.js","../../common/xml-util/build/caption.js","../../style-sheet/build/index.js","../../style-sheet/build/style-sheet.js","../../docx-secretary/build/std-secretary.js","../../docx-style/build/user-style.js","../../docx-style/build/std-style.js","../../docx-secretary/build/user-secretary.js","../../docx-numbering/build/index.js","../../docx-numbering/build/docx-numbering.js","../../style-sheet/build/distillers/distiller.js","../../style-sheet/build/distillers/table.js","../../style-sheet/build/distillers/default.js","../../style-sheet/build/distillers/caption.js","../../style-sheet/build/distillers/formula.js","../../style-sheet/build/distillers/raw.js","../../style-sheet/build/distillers/toc.js","../../style-gardener/build/index.js","../../style-gardener/build/gardener.js","../../docx-ts/build/xml-components/base.js","../../docx-ts/build/import-docx/importer.js","../../docx-ts/build/xml-components/component-factory.js","../../docx-ts/build/xml-components/component-table.js","../../style-gardener/build/section/main/main.js","../../style-gardener/build/section/main/caption.js","../../style-gardener/build/section/main/formula.js","../../style-gardener/build/section/main/table.js","../../style-gardener/build/section/main/unknown.js","../../style-gardener/build/section/abstract-toc/abstract-toc.js","../../style-gardener/build/section/abstract-toc/toc.js","../../style-gardener/build/section/abstract-toc/title.js","../../style-gardener/build/section/abstract-toc/entity.js","../../style-gardener/build/section/abstract-toc/name.js","../../style-gardener/build/section/abstract-toc/literal.js","../../style-gardener/build/section/abstract-toc/abstract.js","../../style-gardener/build/section/abstract-toc/keywords.js","../../docx-package/build/index.js","../../docx-package/build/docx-package.js","component/cmd-bar/command.ts","component/left-nav/LeftNav.tsx","asset/standard_base64.ts","component/cmd-bar/CommandBar.tsx","component/intro/FormatIntro.tsx","component/intro/LintIntro.tsx","component/intro/ManualIntro.tsx","component/main/Main.tsx","component/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","__webpack_require__","__extends","this","_extendStatics","d","b","setPrototypeOf","__proto__","Array","__","constructor","prototype","create","XmlComponent","_super","tag","_this","call","iter","m_Root","Symbol","iterator","get","enumerable","configurable","next","length","done","PrepareXml","name","m_Tag","type","elements","filter","child","undefined","map","text","attributes","m_Attributes","SetAttributes","attrs","GetAttributes","AddChild","push","Name","Normalize","BaseXmlComponent","module","grid","row","column","xml_component_1","paragraph_prop_1","run_1","Paragraph","m_KeepStyle","GetProperty","m_Property","property","find","ParagraphProperty","unshift","UpdateProperty","index","findIndex","KeepStyle","forEach","e","Run","docx_package_1","DocxPackage","conversion_1","TextToRun","XmlToElement","TextToParagraph","RunText","error","PlainText","join","trim","xml_util_1","Secretary","m_TypeTable","w:p","ParagraphType","bind","w:tbl","TableType","w:sdt","StructureDocTagType","pStyle","style_id","Get","m_DocxStyle","StyleName","pTag","StructureInsight","insight","IsSectionSeparator","DocxStyle","styles_xml","m_Styles","FileToElement","NativeName","OutlineLevel","paragraph_1","Body","IsEmpty","root","includes","i","run_prop_1","prop","RunProperty","m_WhiteList","Set","v","has","TableProperty","docx_ts_1","DefaultGardener","Graft","_a","old","item","paragraph","endsWith","old_element","text_list","split","new_element","Convert","Clone","default_style","style","head","toc","xml_js_1","ElementToXml","js2xml","compact","FilterElement","startsWith","xml_text","xml2js","captureSpacesBetweenElements","xml_file","ElementToFile","declaration","version","encoding","standalone","lodash_1","ExtractElement","HasElement","lodash_2","body_1","Document","GetBody","SetBody","body","immutable_1","Attributes","toJSON","OrderedMap","Text","SetText","GetText","__values","o","table_prop_1","Table","UpdateCellProperty","e_1","e_2","_b","row_1","row_1_1","column_1","column_1_1","cell","e_2_1","return","e_1_1","PropertyItem","SectionGardener","id","item_copy","JSON","parse","stringify","section_1","nav","main","cmdbar","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","result","then","apply","__generator","f","y","t","g","_","label","sent","trys","ops","verb","throw","n","op","TypeError","pop","docx_inject_1","style_sheet_1","style_gardener_1","FormatPackage","input","standard","style_sheet","_c","user_doc","user_styles","user_numbering","grafted","_d","StyleSheet","Read","document_xml","Save","content","InjectPackage","FormatPackageNative","InjectPackageNative","InjectContentTypes","e_input","e_standard","items_set","concat","from","InjectDocPartsRelation","input_targets","target","InjectDocPartsRelationNative","replace","__input","__std","_i","xmls_1","name_1","_e","images_1","name_2","_f","_g","_h","_j","xmls_2","name_3","settings","header1","header2","header1_rel","header1_modified","header2_rel","header2_modified","header_logo","text_1","toLowerCase","ExtractSections","blocks","sections","reduce","prev","curr","search_1","CaptionFieldsRange","complex_start","complex_end","findLastIndex","simple_start","Number","MAX_SAFE_INTEGER","simple_end","MIN_VALUE","start","Math","min","end","max","ExtractCaptionFields","range","slice","ExtractText","ExcludeRun","ExtractPreCaption","raw","pre","ExtractPostCaption","post","caption","ExtractCaption","fields","docx_secretary_1","distiller_1","m_StyleSheet","secretary_1","StdSecretary","UnderstandStyle","section_count_1","block","Insight","Distiller","Distill","docx_style_1","arguments","StdStyle","StyleTable","0","1","2","UserStyle","outline_level","heading 1","heading 2","heading 3","无编号章","论文正文","图片","图片题注","论文表格","表格题注","论文公式","公式题注","参考文献","款","项","中文摘要","中文论文作者","中文论文作者名","中文指导教师","中文指导教师名","中文摘要字面值","中文关键词字面值","英文摘要","英文论文作者","英文论文作者名","英文指导教师","英文指导教师名","英文摘要字面值","英文关键词字面值","native_name","docx_numbering_1","CaptionTable","图","表","公式","NormalTable","\"name\":\"w:drawing\"","\"name\":\"m:oMath\"","PureChapterSet","UserSecretary","m_InsightTable","CaptionType","normal","NormalType","list","ListType","chapter_title","ChapterType","UnderstandNumbering","numbering_xml","m_DocxNumbering","DocxNumbering","key","test","numPr","level","NumberingType","UpdateInsight","m_Numbering","abstract_id","num_abstract","level_info","table_1","default_1","caption_1","formula_1","raw_1","toc_1","DistillerTable","EchoTable","indexOf","RawTable","table","TableDistiller","CaptionDistiller","formula","FormulaDistiller","TocDistiller","default","DefaultDistiller","RawDistiller","paragraph_style","caption_text","caption_space","repeat","trimLeft","formula_index","backup","main_1","abstract_toc_1","IndexTable","abstract_toc","Index","section_name","sections_length","__document","Import","old_body","secretary","new_body","AbstractTocGardener","section","main_toc","MainGardener","attributes_1","component_factory_1","component","ComponentFactory","CreateComponent","component_table_1","property_item_1","ComponentTable","class","document_1","w:document","w:body","w:pPr","w:r","w:rPr","w:t","w:tblPr","unknown_1","GardenerTable","CaptionGardener","FormulaGardener","TableGardener","unknown","UnknownGardener","components","section_2","FillHole","hole","splice","ClearHole","caption_style","pre_caption","post_caption","formula_style","table_style","table_prop","paragraph_prop","title_1","entity_1","literal_1","abstract_1","keywords_1","ExtractAbstract","__start","__end","ExtractAbstractCn","ExtractAbstractEn","ExtractKeywords","ExtractKeywordsCn","ExtractKeywordsEn","meta","title_cn","title_en","author_cn","author_en","tutor_cn","tutor_en","title_index","author_index","tutor_index","ExtractMeta","TitleGardener","title","EntityGardener","author_name_cn","NameGardener","tutor_name_cn","literal_abstract_cn","LiteralGardener","abstract_cn","AbstractGardener","abstract","literal_keywords_cn","keywords_cn","KeywordsGardener","keywords","author_name_en","tutor_name_en","literal_abstract_en","abstract_en","literal_keywords_en","keywords_en","TocGardener","abstract_toc_section","JsZip","package_content_table","content_types","doc_parts_rel","theme","document","numbering","font_table","styles","foot_notes","end_notes","literal_header_logo","FromArrayBuffer","buffer","loadAsync","m_Package","ToArrayBuffer","generateAsync","path","files","async","console","log","file","LeftNav","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","ev","dispatch","link_key","react_default","a","createElement","Nav","className","groups","links","url","selectedKey","onLinkClick","OnLinkClick","Component","__LeftNav","connect","state","standard_base64","_callee","user_buffer","file_name","user","regenerator_default","wrap","_context","decode","t0","save","t1","t2","stop","cmd_button_styles","backgroundColor","padding","CommandBar","getElementById","click","reader","FileReader","onload","_x","_x2","_Format","Format","reset","readAsArrayBuffer","onChange","OnUploadFile","display","CommandBarButton","iconProps","iconName","onClick","OnClickUpload","FormatIntro","LintIntro","toString","ManualIntro","Main","FormatIntro_FormatIntro","LintIntro_LintIntro","ManualIntro_ManualIntro","CommandBar_CommandBar","DisplayCmdBar","DisplayIntro","__Main","App","dir","Boolean","window","location","hostname","match","initializeIcons","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","app_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4de191c0.chunk.js","sourcesContent":["\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./section\"));\n\n__export(require(\"./caption\"));\n\n__export(require(\"./text\"));\n\n__export(require(\"./conversion\"));\n\n__export(require(\"./search\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./document/document\"));\n\n__export(require(\"./document/body\"));\n\n__export(require(\"./paragraph/paragraph\"));\n\n__export(require(\"./paragraph/paragraph-prop\"));\n\n__export(require(\"./paragraph/run/run\"));\n\n__export(require(\"./paragraph/run/run-prop\"));\n\n__export(require(\"./paragraph/run/run-components/text\"));\n\n__export(require(\"./table/table\"));\n\n__export(require(\"./table/table-prop\"));\n\n__export(require(\"./xml-components/attributes\"));\n\n__export(require(\"./xml-components/xml-component\"));\n\n__export(require(\"./xml-components/property-item\"));\n\n__export(require(\"./import-docx/importer\"));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base_1 = require(\"./base\");\n\nvar XmlComponent =\n/** @class */\nfunction (_super) {\n  __extends(XmlComponent, _super);\n\n  function XmlComponent(tag) {\n    var _this = _super.call(this, tag) || this;\n\n    _this.iter = 0;\n    _this.m_Root = new Array();\n    return _this;\n  }\n\n  XmlComponent.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  Object.defineProperty(XmlComponent.prototype, \"root\", {\n    get: function get() {\n      return this.m_Root;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XmlComponent.prototype.next = function () {\n    if (this.iter < this.m_Root.length && this.m_Root[this.iter] instanceof XmlComponent) {\n      return {\n        done: false,\n        value: this.m_Root[this.iter++]\n      };\n    } else {\n      this.iter = 0;\n      return {\n        done: true,\n        value: null\n      };\n    }\n  };\n\n  XmlComponent.prototype.PrepareXml = function () {\n    return {\n      name: this.m_Tag,\n      type: \"element\",\n      elements: this.m_Root.filter(function (child) {\n        return child !== undefined && child !== null;\n      }).map(function (child) {\n        return child instanceof XmlComponent ? child.PrepareXml() : {\n          type: \"text\",\n          text: child\n        };\n      }),\n      attributes: this.m_Attributes.PrepareXml()\n    };\n  };\n\n  XmlComponent.prototype.SetAttributes = function (attrs) {\n    this.m_Attributes.SetAttributes(attrs || {});\n    return this;\n  };\n\n  XmlComponent.prototype.GetAttributes = function () {\n    return this.m_Attributes.PrepareXml();\n  };\n\n  XmlComponent.prototype.AddChild = function (child) {\n    this.m_Root.push(child);\n    return this;\n  };\n\n  XmlComponent.prototype.Name = function () {\n    return this.m_Tag;\n  };\n\n  XmlComponent.prototype.Normalize = function () {};\n\n  return XmlComponent;\n}(base_1.BaseXmlComponent);\n\nexports.XmlComponent = XmlComponent;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"app_grid__2kz_q\",\"row\":\"app_row__aP2F5\",\"column\":\"app_column__27NmA\"};","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar paragraph_prop_1 = require(\"./paragraph-prop\");\n\nvar run_1 = require(\"./run/run\");\n\nvar Paragraph =\n/** @class */\nfunction (_super) {\n  __extends(Paragraph, _super);\n\n  function Paragraph() {\n    var _this = _super.call(this, \"w:p\") || this;\n\n    _this.m_KeepStyle = false;\n    return _this;\n  }\n\n  Paragraph.prototype.GetProperty = function () {\n    // property must be the first child element of paragraph?\n    if (!this.m_Property) {\n      var property = this.m_Root.find(function (child) {\n        return child instanceof paragraph_prop_1.ParagraphProperty;\n      });\n\n      if (property) {\n        this.m_Property = property;\n        return this.m_Property;\n      }\n\n      this.m_Property = new paragraph_prop_1.ParagraphProperty();\n      this.m_Root.unshift(this.m_Property);\n    }\n\n    return this.m_Property;\n  };\n\n  Paragraph.prototype.UpdateProperty = function (property) {\n    // if prop is added in importing phrase and this.m_Property is not set\n    var index = this.m_Root.findIndex(function (child) {\n      return child instanceof paragraph_prop_1.ParagraphProperty;\n    });\n\n    if (index !== -1) {\n      delete this.m_Root[index];\n    }\n\n    this.m_Property = property;\n    this.m_Root.unshift(this.m_Property);\n  };\n\n  Paragraph.prototype.KeepStyle = function () {\n    this.m_KeepStyle = true;\n  };\n\n  Paragraph.prototype.Normalize = function () {\n    if (!this.m_KeepStyle) {\n      this.m_Root.forEach(function (e) {\n        if (e instanceof run_1.Run) {\n          e.Normalize();\n        }\n      });\n    }\n  };\n\n  Paragraph.prototype.PrepareXml = function () {\n    return _super.prototype.PrepareXml.call(this);\n  };\n\n  return Paragraph;\n}(xml_component_1.XmlComponent);\n\nexports.Paragraph = Paragraph;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-driver\"));\n\nvar docx_package_1 = require(\"docx-package\");\n\nexports.DocxPackage = docx_package_1.DocxPackage;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar conversion_1 = require(\"./conversion\"); //\n\n\nfunction TextToRun(text) {\n  return conversion_1.XmlToElement(\"<w:r><w:t xml:space=\\\"preserve\\\">\" + text + \"</w:t></w:r>\");\n}\n\nexports.TextToRun = TextToRun;\n\nfunction TextToParagraph(text) {\n  return conversion_1.XmlToElement(\"<w:p><w:r><w:t xml:space=\\\"preserve\\\">\" + text + \"</w:t></w:r></w:p>\");\n}\n\nexports.TextToParagraph = TextToParagraph; // e is w:r\n\nfunction RunText(e) {\n  try {\n    return e.elements.find(function (e) {\n      return e.name === \"w:t\";\n    }).elements.find(function (e) {\n      return e.type === \"text\";\n    }).text;\n  } catch (error) {\n    return \"\";\n  }\n}\n\nexports.RunText = RunText; // e is w:p, join text in w:t element\n\nfunction PlainText(e) {\n  return e.elements.filter(function (e) {\n    return e.name === \"w:r\";\n  }).map(function (e) {\n    return e.elements.find(function (e) {\n      return e.name === \"w:t\";\n    });\n  }).filter(function (e) {\n    return e;\n  }).map(function (e) {\n    return e.elements.find(function (e) {\n      return e.type === \"text\";\n    });\n  }).map(function (e) {\n    return e.text;\n  }).join(\"\").trim();\n}\n\nexports.PlainText = PlainText;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar Secretary =\n/** @class */\nfunction () {\n  function Secretary() {\n    this.m_TypeTable = {\n      \"w:p\": this.ParagraphType.bind(this),\n      \"w:tbl\": this.TableType.bind(this),\n      \"w:sdt\": this.StructureDocTagType.bind(this)\n    };\n  }\n\n  Secretary.prototype.ParagraphType = function (e) {\n    try {\n      var pStyle = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:pStyle\";\n      });\n      var style_id = xml_util_1.Get(pStyle, [\"attributes\", \"w:val\"], \"\");\n      return this.m_DocxStyle.StyleName(style_id);\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  Secretary.prototype.StructureDocTagType = function (e) {\n    try {\n      var pTag = e.elements.find(function (e) {\n        return e.name === \"w:sdtPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:docPartObj\";\n      }).elements.find(function (e) {\n        return e.name === \"w:docPartGallery\";\n      });\n      var name_1 = xml_util_1.Get(pTag, [\"attributes\", \"w:val\"], \"\");\n      return name_1 === \"Table of Contents\" ? \"toc\" : \"normal\";\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  Secretary.prototype.TableType = function (e) {\n    return \"table\";\n  };\n\n  Secretary.prototype.StructureInsight = function (e) {\n    var insight = {\n      type: \"normal\"\n    };\n\n    if (xml_util_1.IsSectionSeparator(e)) {\n      insight.type = \"section\";\n      return insight;\n    }\n\n    if (e.name in this.m_TypeTable) {\n      insight.type = this.m_TypeTable[e.name](e);\n      return insight;\n    }\n\n    return insight;\n  };\n\n  return Secretary;\n}();\n\nexports.Secretary = Secretary;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar DocxStyle =\n/** @class */\nfunction () {\n  function DocxStyle(styles_xml) {\n    this.m_Styles = xml_util_1.FileToElement(styles_xml);\n  }\n\n  DocxStyle.prototype.NativeName = function (style_id) {\n    try {\n      return this.m_Styles.elements.find(function (e) {\n        return e.attributes && e.attributes[\"w:styleId\"] === style_id;\n      }).elements.find(function (e) {\n        return e.name === \"w:name\";\n      }).attributes[\"w:val\"];\n    } catch (error) {\n      return \"\";\n    }\n  };\n\n  DocxStyle.prototype.OutlineLevel = function (style_id) {\n    try {\n      return this.m_Styles.elements.find(function (e) {\n        return e.attributes && e.attributes[\"w:styleId\"] === style_id;\n      }).elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:outlineLvl\";\n      }).attributes[\"w:val\"];\n    } catch (error) {\n      return \"\";\n    }\n  };\n\n  return DocxStyle;\n}();\n\nexports.DocxStyle = DocxStyle;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar paragraph_1 = require(\"../paragraph/paragraph\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar Body =\n/** @class */\nfunction (_super) {\n  __extends(Body, _super);\n\n  function Body() {\n    return _super.call(this, \"w:body\") || this;\n  }\n\n  Body.prototype.IsEmpty = function (e) {\n    if (e.Name() !== \"w:p\") {\n      return false;\n    }\n\n    if (!e.root.find(function (child) {\n      return child instanceof xml_component_1.XmlComponent && (child.Name() === \"w:r\" || child.Name().includes(\"Math\"));\n    }) && !xml_util_1.IsSectionSeparator(e.PrepareXml())) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Body.prototype.Normalize = function () {\n    var _this = this;\n\n    this.m_Root.forEach(function (e, i) {\n      if (_this.IsEmpty(e)) {\n        _this.m_Root[i] = null;\n      } else if (e instanceof paragraph_1.Paragraph) {\n        e.Normalize();\n      }\n    });\n  };\n\n  Body.prototype.PrepareXml = function () {\n    this.Normalize();\n    return _super.prototype.PrepareXml.call(this);\n  };\n\n  return Body;\n}(xml_component_1.XmlComponent);\n\nexports.Body = Body;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar ParagraphProperty =\n/** @class */\nfunction (_super) {\n  __extends(ParagraphProperty, _super);\n\n  function ParagraphProperty() {\n    return _super.call(this, \"w:pPr\") || this;\n  }\n\n  return ParagraphProperty;\n}(xml_component_1.XmlComponent);\n\nexports.ParagraphProperty = ParagraphProperty;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../../xml-components/xml-component\");\n\nvar run_prop_1 = require(\"./run-prop\");\n\nvar Run =\n/** @class */\nfunction (_super) {\n  __extends(Run, _super);\n\n  function Run() {\n    return _super.call(this, \"w:r\") || this;\n  }\n\n  Run.prototype.Normalize = function () {\n    var prop = this.m_Root.find(function (e) {\n      return e instanceof run_prop_1.RunProperty;\n    });\n    prop && prop.Normalize();\n  };\n\n  return Run;\n}(xml_component_1.XmlComponent);\n\nexports.Run = Run;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../../xml-components/xml-component\");\n\nvar RunProperty =\n/** @class */\nfunction (_super) {\n  __extends(RunProperty, _super);\n\n  function RunProperty() {\n    var _this = _super.call(this, \"w:rPr\") || this;\n\n    _this.m_WhiteList = new Set([\"w:noProof\", \"w:vertAlign\"]);\n    return _this;\n  }\n\n  RunProperty.prototype.Normalize = function () {\n    var _this = this;\n\n    this.m_Root.forEach(function (v, i) {\n      if (v instanceof xml_component_1.XmlComponent && !_this.m_WhiteList.has(v.Name())) {\n        _this.m_Root[i] = null;\n      }\n    });\n  };\n\n  return RunProperty;\n}(xml_component_1.XmlComponent);\n\nexports.RunProperty = RunProperty;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar TableProperty =\n/** @class */\nfunction (_super) {\n  __extends(TableProperty, _super);\n\n  function TableProperty() {\n    return _super.call(this, \"w:tblPr\") || this;\n  }\n\n  return TableProperty;\n}(xml_component_1.XmlComponent);\n\nexports.TableProperty = TableProperty;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.DefaultGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item,\n        type = _a.type;\n\n    try {\n      var paragraph = null;\n\n      if (type.endsWith(\"_title\")) {\n        var old_element = old.PrepareXml();\n        var text_list = xml_util_1.PlainText(old_element).split(\" \");\n        var new_element = xml_util_1.TextToParagraph(text_list[text_list.length - 1]);\n        paragraph = docx_ts_1.Convert(new_element);\n      } else {\n        paragraph = docx_ts_1.Clone(old);\n      }\n\n      var default_style = item.style;\n      var prop = docx_ts_1.Convert(default_style);\n      paragraph.UpdateProperty(prop);\n      return paragraph;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n    }\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"manual_head__N8vIi\",\"toc\":\"manual_toc__3XS79\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_js_1 = require(\"xml-js\"); // xml_text likes <w:p ...> ... </w:p>\n\n\nfunction XmlToElement(xml_text) {\n  try {\n    var e = xml_js_1.xml2js(xml_text, {\n      compact: false,\n      captureSpacesBetweenElements: true\n    }).elements[0];\n    return FilterElement(e);\n  } catch (error) {\n    return null;\n  }\n}\n\nexports.XmlToElement = XmlToElement; // exclude xml head\n\nfunction FileToElement(xml_file) {\n  try {\n    var raw = xml_js_1.xml2js(xml_file, {\n      compact: false,\n      captureSpacesBetweenElements: true\n    });\n    var filtered = FilterElement(raw);\n    return filtered.elements[0];\n  } catch (error) {\n    return null;\n  }\n}\n\nexports.FileToElement = FileToElement;\n\nfunction ElementToFile(e) {\n  return XmlHead() + \"\\r\\n\" + ElementToXml(e);\n}\n\nexports.ElementToFile = ElementToFile; // element likes {\"name\":...,\"type\":...}\n\nfunction ElementToXml(e) {\n  return xml_js_1.js2xml({\n    elements: [e]\n  }, {\n    compact: false\n  });\n}\n\nexports.ElementToXml = ElementToXml; //\n\nfunction FilterElement(e) {\n  if (e.elements) {\n    e.elements = e.elements.filter(function (e) {\n      return e.type !== \"text\" || !e.text.startsWith(\"\\r\\n\") && !e.text.startsWith(\"\\n\");\n    });\n    e.elements.forEach(function (e) {\n      FilterElement(e);\n    });\n  }\n\n  return e;\n}\n\nfunction XmlHead() {\n  return xml_js_1.js2xml({\n    declaration: {\n      attributes: {\n        version: \"1.0\",\n        encoding: \"UTF-8\",\n        standalone: \"yes\"\n      }\n    }\n  }, {\n    compact: false\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nfunction ExtractElement(_a) {\n  var name = _a.name,\n      prop = _a.prop,\n      value = _a.value,\n      e = _a.e;\n  var result = e.elements.find(function (e) {\n    return e.name === name && lodash_1.get(e, [\"attributes\", prop], \"\") === value;\n  });\n  return result || null;\n}\n\nexports.ExtractElement = ExtractElement;\n\nfunction HasElement(_a) {\n  var name = _a.name,\n      prop = _a.prop,\n      value = _a.value,\n      e = _a.e;\n  return ExtractElement({\n    name: name,\n    prop: prop,\n    value: value,\n    e: e\n  }) !== null;\n}\n\nexports.HasElement = HasElement;\n\nvar lodash_2 = require(\"lodash\");\n\nexports.Get = lodash_2.get;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./secretary\"));\n\n__export(require(\"./std-secretary\"));\n\n__export(require(\"./user-secretary\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-style\"));\n\n__export(require(\"./user-style\"));\n\n__export(require(\"./std-style\"));","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar body_1 = require(\"./body\");\n\nvar Document =\n/** @class */\nfunction (_super) {\n  __extends(Document, _super);\n\n  function Document() {\n    return _super.call(this, \"w:document\") || this;\n  }\n\n  Document.prototype.GetBody = function () {\n    return this.m_Root.find(function (e) {\n      return e instanceof body_1.Body;\n    });\n  };\n\n  Document.prototype.SetBody = function (body) {\n    this.m_Root[0] = body;\n  };\n\n  return Document;\n}(xml_component_1.XmlComponent);\n\nexports.Document = Document;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar immutable_1 = require(\"immutable\");\n\nvar Attributes =\n/** @class */\nfunction () {\n  function Attributes(attrs) {\n    this.SetAttributes(attrs);\n  }\n\n  Attributes.prototype.PrepareXml = function () {\n    return this.m_Attributes.toJSON();\n  };\n\n  Attributes.prototype.SetAttributes = function (attrs) {\n    this.m_Attributes = immutable_1.OrderedMap(attrs);\n  };\n\n  return Attributes;\n}();\n\nexports.Attributes = Attributes;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../../../xml-components/xml-component\");\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    return _super.call(this, \"w:t\") || this;\n  }\n\n  Text.prototype.SetText = function (text) {\n    this.m_Root[0] = text;\n    return this;\n  };\n\n  Text.prototype.GetText = function () {\n    return this.m_Root[0] || \"\";\n  };\n\n  return Text;\n}(xml_component_1.XmlComponent);\n\nexports.Text = Text;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"../xml-components/xml-component\");\n\nvar table_prop_1 = require(\"./table-prop\");\n\nvar paragraph_1 = require(\"../paragraph/paragraph\");\n\nvar Table =\n/** @class */\nfunction (_super) {\n  __extends(Table, _super);\n\n  function Table() {\n    return _super.call(this, \"w:tbl\") || this;\n  }\n\n  Table.prototype.GetProperty = function () {\n    // property must be the first child element of table?\n    if (!this.m_Property) {\n      var property = this.m_Root.find(function (child) {\n        return child instanceof table_prop_1.TableProperty;\n      });\n\n      if (property) {\n        this.m_Property = property;\n        return this.m_Property;\n      }\n\n      this.m_Property = new table_prop_1.TableProperty();\n      this.m_Root.unshift(this.m_Property);\n    }\n\n    return this.m_Property;\n  };\n\n  Table.prototype.UpdateProperty = function (property) {\n    // if prop is added in importing phrase and this.m_Property is not set\n    var index = this.m_Root.findIndex(function (child) {\n      return child instanceof table_prop_1.TableProperty;\n    });\n\n    if (index !== -1) {\n      delete this.m_Root[index];\n    }\n\n    this.m_Property = property;\n    this.m_Root.unshift(this.m_Property);\n  };\n\n  Table.prototype.UpdateCellProperty = function (property) {\n    this.m_Root.forEach(function (e) {\n      var e_1, _a, e_2, _b;\n\n      if (e && e instanceof xml_component_1.XmlComponent) {\n        var row = e;\n\n        if (row.Name() === \"w:tr\") {\n          try {\n            for (var row_1 = __values(row), row_1_1 = row_1.next(); !row_1_1.done; row_1_1 = row_1.next()) {\n              var column = row_1_1.value;\n\n              if (column.Name() === \"w:tc\") {\n                try {\n                  for (var column_1 = __values(column), column_1_1 = column_1.next(); !column_1_1.done; column_1_1 = column_1.next()) {\n                    var cell = column_1_1.value;\n\n                    if (cell instanceof paragraph_1.Paragraph) {\n                      cell.UpdateProperty(property);\n                    }\n                  }\n                } catch (e_2_1) {\n                  e_2 = {\n                    error: e_2_1\n                  };\n                } finally {\n                  try {\n                    if (column_1_1 && !column_1_1.done && (_b = column_1.return)) _b.call(column_1);\n                  } finally {\n                    if (e_2) throw e_2.error;\n                  }\n                }\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (row_1_1 && !row_1_1.done && (_a = row_1.return)) _a.call(row_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n        }\n      }\n    });\n  };\n\n  return Table;\n}(xml_component_1.XmlComponent);\n\nexports.Table = Table;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_component_1 = require(\"./xml-component\"); // property item is the default with assumption that has no child element, but it can have children\n// it can also be general tag that not important enough to deserve a standalone class\n\n\nvar PropertyItem =\n/** @class */\nfunction (_super) {\n  __extends(PropertyItem, _super);\n\n  function PropertyItem(tag) {\n    return _super.call(this, tag) || this;\n  }\n\n  return PropertyItem;\n}(xml_component_1.XmlComponent);\n\nexports.PropertyItem = PropertyItem;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.SectionGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item,\n        id = _a.id;\n\n    if (!item) {\n      return null;\n    }\n\n    var item_copy = JSON.parse(JSON.stringify(item));\n\n    try {\n      if (item_copy.style.name === \"w:sectPr\" && item_copy.style.elements[0].name === \"w:headerReference\") {\n        var header_ref = item_copy.style.elements[0];\n        header_ref.attributes[\"r:id\"] = id;\n      } else if (item_copy.style.name === \"w:p\" && item_copy.style.elements[0].elements[1].name === \"w:sectPr\") {\n        var section_1 = item_copy.style.elements[0].elements[1];\n\n        if (section_1.elements[0].name === \"w:headerReference\") {\n          var header_ref = section_1.elements[0];\n          header_ref.attributes[\"r:id\"] = id;\n        }\n      } // TODO: use general prop item or section component?\n\n\n      var section = docx_ts_1.Convert(item_copy.style);\n      return section;\n    } catch (error) {\n      return docx_ts_1.Convert(item_copy.style);\n    }\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__SysaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2wMeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cmdbar\":\"cmdbar_cmdbar__15GKK\"};","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_inject_1 = require(\"docx-inject\");\n\nvar style_sheet_1 = require(\"style-sheet\");\n\nvar style_gardener_1 = require(\"style-gardener\"); // input will be modified\n\n\nfunction FormatPackage(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var style_sheet, _b, _c, user_doc, user_styles, user_numbering, grafted;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _b = style_sheet_1.StyleSheet.bind;\n          _c = {};\n          return [4\n          /*yield*/\n          , standard.Read(\"styles\")];\n\n        case 1:\n          _c.styles_xml = _d.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"document\")];\n\n        case 2:\n          style_sheet = new (_b.apply(style_sheet_1.StyleSheet, [void 0, (_c.document_xml = _d.sent(), _c)]))();\n          return [4\n          /*yield*/\n          , input.Read(\"document\")];\n\n        case 3:\n          user_doc = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"styles\")];\n\n        case 4:\n          user_styles = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"numbering\")];\n\n        case 5:\n          user_numbering = _d.sent();\n          grafted = style_gardener_1.Graft({\n            style_sheet: style_sheet,\n            user_doc: user_doc,\n            user_numbering: user_numbering,\n            user_styles: user_styles\n          });\n          input.Save({\n            content: grafted,\n            name: \"document\"\n          }); // caution! the order matters\n          // if you inject package first, you will lost original user style \n\n          return [4\n          /*yield*/\n          , docx_inject_1.InjectPackage({\n            input: input,\n            standard: standard\n          })];\n\n        case 6:\n          // caution! the order matters\n          // if you inject package first, you will lost original user style \n          _d.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.FormatPackage = FormatPackage; //\n\nfunction FormatPackageNative(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var style_sheet, _b, _c, user_doc, user_styles, user_numbering, grafted;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _b = style_sheet_1.StyleSheet.bind;\n          _c = {};\n          return [4\n          /*yield*/\n          , standard.Read(\"styles\")];\n\n        case 1:\n          _c.styles_xml = _d.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"document\")];\n\n        case 2:\n          style_sheet = new (_b.apply(style_sheet_1.StyleSheet, [void 0, (_c.document_xml = _d.sent(), _c)]))();\n          return [4\n          /*yield*/\n          , input.Read(\"document\")];\n\n        case 3:\n          user_doc = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"styles\")];\n\n        case 4:\n          user_styles = _d.sent();\n          return [4\n          /*yield*/\n          , input.Read(\"numbering\")];\n\n        case 5:\n          user_numbering = _d.sent();\n          grafted = style_gardener_1.Graft({\n            style_sheet: style_sheet,\n            user_doc: user_doc,\n            user_numbering: user_numbering,\n            user_styles: user_styles\n          });\n          input.Save({\n            content: grafted,\n            name: \"document\"\n          }); // caution! the order matters\n          // if you inject package first, you will lost original user style \n\n          return [4\n          /*yield*/\n          , docx_inject_1.InjectPackageNative({\n            input: input,\n            standard: standard\n          })];\n\n        case 6:\n          // caution! the order matters\n          // if you inject package first, you will lost original user style \n          _d.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.FormatPackageNative = FormatPackageNative;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-inject\"));","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nfunction InjectContentTypes(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  var e_input = xml_util_1.FileToElement(input);\n  var e_standard = xml_util_1.FileToElement(standard); // TODO: we need better set!!\n\n  var items_set = new Set(e_input.elements.map(function (e) {\n    return JSON.stringify(e);\n  }).concat(e_standard.elements.map(function (e) {\n    return JSON.stringify(e);\n  })));\n  e_input.elements = Array.from(items_set).map(function (e) {\n    return JSON.parse(e);\n  });\n  return xml_util_1.ElementToFile(e_input);\n}\n\nexports.InjectContentTypes = InjectContentTypes;\n\nfunction InjectDocPartsRelation(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  var e_input = xml_util_1.FileToElement(input);\n  var e_standard = xml_util_1.FileToElement(standard);\n  var input_targets = new Set(e_input.elements.map(function (e) {\n    return e.attributes[\"Target\"];\n  }));\n  var image_type = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\n  e_standard.elements.forEach(function (e) {\n    var target = e.attributes[\"Target\"];\n\n    if (target.startsWith(\"header\")) {\n      // TODO: what happens when same target with different id?\n      e_input.elements.push(e); // if (input_targets.has(target))\n      // {\n      // }\n      // else\n      // {\n      // }\n    } else if (!input_targets.has(target) && e.attributes[\"Type\"] !== image_type) {\n      e.attributes[\"Id\"] = \"rId\" + (e_input.elements.length + 1);\n      e_input.elements.push(e);\n    }\n  });\n  return xml_util_1.ElementToFile(e_input);\n}\n\nexports.InjectDocPartsRelation = InjectDocPartsRelation;\n\nfunction InjectPackage(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var __input, __std, result, __input, __std, result, xmls, _i, xmls_1, name_1, _b, _c, _d, images, _e, images_1, name_2, _f, _g, _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , input.Read(\"content_types\")];\n\n        case 1:\n          __input = _j.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"content_types\")];\n\n        case 2:\n          __std = _j.sent();\n          result = InjectContentTypes({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"content_types\"\n          });\n          return [4\n          /*yield*/\n          , input.Read(\"doc_parts_rel\")];\n\n        case 3:\n          __input = _j.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"doc_parts_rel\")];\n\n        case 4:\n          __std = _j.sent();\n          result = InjectDocPartsRelation({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"doc_parts_rel\"\n          });\n          xmls = [\"numbering\", \"foot_notes\", \"end_notes\", \"theme\", \"styles\", \"font_table\", \"header1\", \"header2\", \"header1_rel\", \"header2_rel\"];\n          _i = 0, xmls_1 = xmls;\n          _j.label = 5;\n\n        case 5:\n          if (!(_i < xmls_1.length)) return [3\n          /*break*/\n          , 8];\n          name_1 = xmls_1[_i];\n          _c = (_b = input).Save;\n          _d = {};\n          return [4\n          /*yield*/\n          , standard.Read(name_1)];\n\n        case 6:\n          _c.apply(_b, [(_d.content = _j.sent(), _d.name = name_1, _d)]);\n\n          _j.label = 7;\n\n        case 7:\n          _i++;\n          return [3\n          /*break*/\n          , 5];\n\n        case 8:\n          images = [\"header_logo\"];\n          _e = 0, images_1 = images;\n          _j.label = 9;\n\n        case 9:\n          if (!(_e < images_1.length)) return [3\n          /*break*/\n          , 12];\n          name_2 = images_1[_e];\n          _g = (_f = input).Save;\n          _h = {};\n          return [4\n          /*yield*/\n          , standard.Read(name_2, \"arraybuffer\")];\n\n        case 10:\n          _g.apply(_f, [(_h.content = _j.sent(), _h.name = name_2, _h)]);\n\n          _j.label = 11;\n\n        case 11:\n          _e++;\n          return [3\n          /*break*/\n          , 9];\n\n        case 12:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.InjectPackage = InjectPackage; // use native id instead hardcode id by hand\n\nfunction InjectDocPartsRelationNative(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  var e_input = xml_util_1.FileToElement(input);\n  var e_standard = xml_util_1.FileToElement(standard);\n  var input_targets = new Set(e_input.elements.map(function (e) {\n    return e.attributes[\"Target\"];\n  }));\n  var image_type = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\n  e_standard.elements.forEach(function (e) {\n    var target = e.attributes[\"Target\"];\n\n    if (target.startsWith(\"header\")) {\n      // TODO: what happens when same target with different id?\n      // eg. there is header in input file\n      e.attributes[\"Id\"] = target.replace(\".xml\", \"\");\n      e_input.elements.push(e);\n    } else if (!input_targets.has(target) && e.attributes[\"Type\"] !== image_type) {\n      e.attributes[\"Id\"] = \"rId\" + (e_input.elements.length + 1);\n      e_input.elements.push(e);\n    }\n  });\n  return xml_util_1.ElementToFile(e_input);\n}\n\nexports.InjectDocPartsRelationNative = InjectDocPartsRelationNative;\n\nfunction InjectPackageNative(_a) {\n  var input = _a.input,\n      standard = _a.standard;\n  return __awaiter(this, void 0, void 0, function () {\n    var __input, __std, result, __input, __std, result, xmls, _i, xmls_2, name_3, _b, _c, _d, settings, _e, header1, header2, header1_rel, header1_modified, header2_rel, header2_modified, header_logo;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , input.Read(\"content_types\")];\n\n        case 1:\n          __input = _f.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"content_types\")];\n\n        case 2:\n          __std = _f.sent();\n          result = InjectContentTypes({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"content_types\"\n          });\n          return [4\n          /*yield*/\n          , input.Read(\"doc_parts_rel\")];\n\n        case 3:\n          __input = _f.sent();\n          return [4\n          /*yield*/\n          , standard.Read(\"doc_parts_rel\")];\n\n        case 4:\n          __std = _f.sent();\n          result = InjectDocPartsRelationNative({\n            input: __input,\n            standard: __std\n          });\n          input.Save({\n            content: result,\n            name: \"doc_parts_rel\"\n          });\n          xmls = [\"numbering\", \"foot_notes\", \"end_notes\", \"theme\", \"styles\", \"font_table\"];\n          _i = 0, xmls_2 = xmls;\n          _f.label = 5;\n\n        case 5:\n          if (!(_i < xmls_2.length)) return [3\n          /*break*/\n          , 8];\n          name_3 = xmls_2[_i];\n          _c = (_b = input).Save;\n          _d = {};\n          return [4\n          /*yield*/\n          , standard.Read(name_3)];\n\n        case 6:\n          _c.apply(_b, [(_d.content = _f.sent(), _d.name = name_3, _d)]);\n\n          _f.label = 7;\n\n        case 7:\n          _i++;\n          return [3\n          /*break*/\n          , 5];\n\n        case 8:\n          _e = xml_util_1.FileToElement;\n          return [4\n          /*yield*/\n          , standard.Read(\"settings\")];\n\n        case 9:\n          settings = _e.apply(void 0, [_f.sent()]);\n          settings.elements.push(xml_util_1.XmlToElement(\"<w:updateFields w:val=\\\"true\\\" />\"));\n          input.Save({\n            content: xml_util_1.ElementToFile(settings),\n            name: \"settings\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header1\")];\n\n        case 10:\n          header1 = _f.sent();\n          input.Save({\n            content: header1.replace(\"r:embed=\\\"rId1\\\"\", \"r:embed=\\\"header_logo\\\"\"),\n            name: \"header1\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header2\")];\n\n        case 11:\n          header2 = _f.sent();\n          input.Save({\n            content: header2.replace(\"r:embed=\\\"rId1\\\"\", \"r:embed=\\\"header_logo\\\"\"),\n            name: \"header2\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header1_rel\")];\n\n        case 12:\n          header1_rel = _f.sent();\n          header1_modified = header1_rel.replace(\"Id=\\\"rId1\\\"\", \"Id=\\\"header_logo\\\"\").replace(\"Target=\\\"media/image1.png\\\"\", \"Target=\\\"media/header_logo.png\\\"\");\n          input.Save({\n            content: header1_modified,\n            name: \"header1_rel\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header2_rel\")];\n\n        case 13:\n          header2_rel = _f.sent();\n          header2_modified = header2_rel.replace(\"Id=\\\"rId1\\\"\", \"Id=\\\"header_logo\\\"\").replace(\"Target=\\\"media/image1.png\\\"\", \"Target=\\\"media/header_logo.png\\\"\");\n          input.Save({\n            content: header2_modified,\n            name: \"header2_rel\"\n          });\n          return [4\n          /*yield*/\n          , standard.Read(\"header_logo\", \"arraybuffer\")];\n\n        case 14:\n          header_logo = _f.sent();\n          input.Save({\n            content: header_logo,\n            name: \"literal_header_logo\"\n          });\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.InjectPackageNative = InjectPackageNative;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar text_1 = require(\"./text\");\n\nfunction IsSectionSeparator(e) {\n  var text = text_1.PlainText(e).toLowerCase();\n  return JSON.stringify(e).includes('\"name\":\"w:sectPr\"') || text.startsWith(\"keywords:\");\n}\n\nexports.IsSectionSeparator = IsSectionSeparator;\n\nfunction ExtractSections(blocks) {\n  var sections = blocks.reduce(function (prev, curr) {\n    prev[prev.length - 1].push(curr);\n\n    if (IsSectionSeparator(curr)) {\n      prev.push([]);\n    }\n\n    return prev;\n  }, [[]]); // remove last empty []\n\n  sections.pop();\n  return sections;\n}\n\nexports.ExtractSections = ExtractSections;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar search_1 = require(\"./search\");\n\nvar lodash_1 = require(\"lodash\");\n\nvar text_1 = require(\"./text\");\n\n; // range in [start,end)\n\n;\n;\n; // fields in a w:p is whatever between the first field begin(or fldSimple) and the last field(or fldSimple) end\n\nfunction CaptionFieldsRange(e) {\n  // complex field implementation start\n  var complex_start = e.elements.findIndex(function (e) {\n    return e.name === \"w:r\" && search_1.HasElement({\n      name: \"w:fldChar\",\n      prop: \"w:fldCharType\",\n      value: \"begin\",\n      e: e\n    });\n  });\n  var complex_end = lodash_1.findLastIndex(e.elements, function (e) {\n    return e.name === \"w:r\" && search_1.HasElement({\n      name: \"w:fldChar\",\n      prop: \"w:fldCharType\",\n      value: \"end\",\n      e: e\n    });\n  }); // simple field imple\n\n  var simple_start = e.elements.findIndex(function (e) {\n    return e.name === \"w:fldSimple\";\n  });\n  simple_start === -1 && (simple_start = Number.MAX_SAFE_INTEGER);\n  var simple_end = lodash_1.findLastIndex(e.elements, function (e) {\n    return e.name === \"w:fldSimple\";\n  });\n  simple_end === -1 && (simple_end = Number.MIN_VALUE); //\n\n  var start = Math.min(simple_start, complex_start);\n  var end = Math.max(simple_end, complex_end) + 1;\n  return {\n    start: start,\n    end: end\n  };\n}\n\nexports.CaptionFieldsRange = CaptionFieldsRange;\n\nfunction ExtractCaptionFields(e) {\n  var range = CaptionFieldsRange(e);\n  return e.elements.slice(range.start, range.end);\n}\n\nexports.ExtractCaptionFields = ExtractCaptionFields;\n\nfunction ExtractText(elements) {\n  var text = elements.reduce(function (prev, curr) {\n    return curr.name === \"w:r\" ? prev + text_1.RunText(curr) : prev + \"\";\n  }, \"\");\n  return text ? text_1.TextToRun(text) : null;\n}\n\nfunction ExcludeRun(elements) {\n  return elements.map(function (e) {\n    return e.name === \"w:r\" ? null : e;\n  });\n}\n\nfunction ExtractPreCaption(e) {\n  var range = CaptionFieldsRange(e);\n  var raw = e.elements.slice(0, range.start);\n  return {\n    pre: ExcludeRun(raw),\n    label: ExtractText(raw)\n  };\n}\n\nexports.ExtractPreCaption = ExtractPreCaption;\n\nfunction ExtractPostCaption(e) {\n  var range = CaptionFieldsRange(e);\n  var raw = e.elements.slice(range.end);\n  return {\n    post: ExcludeRun(raw),\n    caption: ExtractText(raw)\n  };\n}\n\nexports.ExtractPostCaption = ExtractPostCaption;\n\nfunction ExtractCaption(e) {\n  return {\n    pre: ExtractPreCaption(e),\n    fields: ExtractCaptionFields(e),\n    post: ExtractPostCaption(e)\n  };\n}\n\nexports.ExtractCaption = ExtractCaption;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar style_sheet_1 = require(\"./style-sheet\");\n\nexports.StyleSheet = style_sheet_1.StyleSheet;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_secretary_1 = require(\"docx-secretary\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar distiller_1 = require(\"./distillers/distiller\");\n\nvar StyleSheet =\n/** @class */\nfunction () {\n  function StyleSheet(_a) {\n    var styles_xml = _a.styles_xml,\n        document_xml = _a.document_xml;\n\n    var _this = this;\n\n    this.m_StyleSheet = {};\n\n    try {\n      var secretary_1 = new docx_secretary_1.StdSecretary();\n      secretary_1.UnderstandStyle(styles_xml);\n      var body = xml_util_1.FileToElement(document_xml).elements[0];\n      var section_count_1 = 0;\n      body.elements.forEach(function (block, i) {\n        var type = secretary_1.Insight(block).type;\n\n        if (type === \"section\") {\n          _this.m_StyleSheet[\"\" + type + section_count_1] = distiller_1.Distiller.Distill(block, type);\n          section_count_1 += 1;\n        } else if (!(type in _this.m_StyleSheet)) {\n          _this.m_StyleSheet[type] = distiller_1.Distiller.Distill(block, type);\n        }\n      });\n    } catch (error) {}\n  }\n\n  StyleSheet.prototype.Get = function (type) {\n    return this.m_StyleSheet[type] || null;\n  };\n\n  return StyleSheet;\n}();\n\nexports.StyleSheet = StyleSheet;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar secretary_1 = require(\"./secretary\");\n\nvar docx_style_1 = require(\"docx-style\");\n\nvar StdSecretary =\n/** @class */\nfunction (_super) {\n  __extends(StdSecretary, _super);\n\n  function StdSecretary() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StdSecretary.prototype.UnderstandStyle = function (styles_xml) {\n    this.m_DocxStyle = new docx_style_1.StdStyle(styles_xml);\n    return this;\n  };\n\n  StdSecretary.prototype.Insight = function (e) {\n    return _super.prototype.StructureInsight.call(this, e);\n  };\n\n  return StdSecretary;\n}(secretary_1.Secretary);\n\nexports.StdSecretary = StdSecretary;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_style_1 = require(\"./docx-style\");\n\nvar StyleTable = {\n  \"0\": \"chapter_title\",\n  \"1\": \"section_title\",\n  \"2\": \"subsection_title\"\n};\n\nvar UserStyle =\n/** @class */\nfunction (_super) {\n  __extends(UserStyle, _super);\n\n  function UserStyle(styles_xml) {\n    return _super.call(this, styles_xml) || this;\n  }\n\n  UserStyle.prototype.StyleName = function (style_id) {\n    //\n    var outline_level = _super.prototype.OutlineLevel.call(this, style_id);\n\n    if (outline_level) {\n      return StyleTable[outline_level] || \"normal\";\n    } //\n\n\n    var name = _super.prototype.NativeName.call(this, style_id);\n\n    if (name === \"caption\") {\n      return \"caption\";\n    } else if (name === \"List Paragraph\") {\n      return \"list\";\n    }\n\n    return \"normal\";\n  };\n\n  return UserStyle;\n}(docx_style_1.DocxStyle);\n\nexports.UserStyle = UserStyle;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_style_1 = require(\"./docx-style\");\n\nvar StyleTable = {\n  \"heading 1\": \"chapter_title\",\n  \"heading 2\": \"section_title\",\n  \"heading 3\": \"subsection_title\",\n  \"无编号章\": \"pure_chapter\",\n  \"论文正文\": \"normal\",\n  \"图片\": \"figure\",\n  \"图片题注\": \"figure_caption\",\n  \"论文表格\": \"table\",\n  \"表格题注\": \"table_caption\",\n  \"论文公式\": \"formula\",\n  \"公式题注\": \"formula_caption\",\n  \"参考文献\": \"reference\",\n  \"款\": \"item\",\n  \"项\": \"subitem\",\n  \"中文摘要\": \"title_cn\",\n  \"中文论文作者\": \"author_cn\",\n  \"中文论文作者名\": \"author_name_cn\",\n  \"中文指导教师\": \"tutor_cn\",\n  \"中文指导教师名\": \"tutor_name_cn\",\n  \"中文摘要字面值\": \"literal_abstract_cn\",\n  \"中文关键词字面值\": \"literal_keywords_cn\",\n  \"英文摘要\": \"title_en\",\n  \"英文论文作者\": \"author_en\",\n  \"英文论文作者名\": \"author_name_en\",\n  \"英文指导教师\": \"tutor_en\",\n  \"英文指导教师名\": \"tutor_name_en\",\n  \"英文摘要字面值\": \"literal_abstract_en\",\n  \"英文关键词字面值\": \"literal_keywords_en\"\n};\n\nvar StdStyle =\n/** @class */\nfunction (_super) {\n  __extends(StdStyle, _super);\n\n  function StdStyle(styles_xml) {\n    return _super.call(this, styles_xml) || this;\n  }\n\n  StdStyle.prototype.StyleName = function (style_id) {\n    var native_name = _super.prototype.NativeName.call(this, style_id);\n\n    return StyleTable[native_name] || \"normal\";\n  };\n\n  return StdStyle;\n}(docx_style_1.DocxStyle);\n\nexports.StdStyle = StdStyle;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar secretary_1 = require(\"./secretary\");\n\nvar docx_style_1 = require(\"docx-style\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar docx_numbering_1 = require(\"docx-numbering\");\n\nvar CaptionTable = {\n  \"图\": \"figure_caption\",\n  \"表\": \"table_caption\",\n  \"公式\": \"formula_caption\"\n};\nvar NormalTable = {\n  '\"name\":\"w:drawing\"': \"figure\",\n  '\"name\":\"m:oMath\"': \"formula\"\n};\nvar PureChapterSet = new Set([\"参考文献\", \"结论\", \"致谢\", \"附录\", \"总结与展望\"]);\n\nvar UserSecretary =\n/** @class */\nfunction (_super) {\n  __extends(UserSecretary, _super);\n\n  function UserSecretary() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.m_InsightTable = {\n      \"caption\": _this.CaptionType.bind(_this),\n      \"normal\": _this.NormalType.bind(_this),\n      \"list\": _this.ListType.bind(_this),\n      \"chapter_title\": _this.ChapterType.bind(_this)\n    };\n    return _this;\n  }\n\n  UserSecretary.prototype.UnderstandStyle = function (styles_xml) {\n    this.m_DocxStyle = new docx_style_1.UserStyle(styles_xml);\n    return this;\n  };\n\n  UserSecretary.prototype.UnderstandNumbering = function (numbering_xml) {\n    this.m_DocxNumbering = new docx_numbering_1.DocxNumbering(numbering_xml);\n    return this;\n  };\n\n  UserSecretary.prototype.CaptionType = function (e) {\n    for (var key in CaptionTable) {\n      if (xml_util_1.PlainText(e).startsWith(key)) {\n        return CaptionTable[key];\n      }\n    }\n\n    return \"normal\";\n  };\n\n  UserSecretary.prototype.ChapterType = function (e) {\n    var text = xml_util_1.PlainText(e);\n\n    if (PureChapterSet.has(text)) {\n      return \"pure_chapter\";\n    } else {\n      return \"chapter_title\";\n    }\n  };\n\n  UserSecretary.prototype.NormalType = function (e) {\n    for (var key in NormalTable) {\n      // TODO: improve the performace with some deep-search lib!\n      if (JSON.stringify(e).includes(key)) {\n        if (NormalTable[key] === \"formula\") {\n          if (xml_util_1.PlainText(e) === \"\") {\n            return \"formula\";\n          } else {\n            return \"normal\";\n          }\n        }\n\n        return NormalTable[key];\n      }\n    }\n\n    var text = xml_util_1.PlainText(e);\n\n    if (/^\\d+\\s+.+$/.test(text) || /^第.章\\s+.+$/.test(text) || /^#\\s*.+$/.test(text)) {\n      return \"chapter_title\";\n    } else if (/^.\\..\\s+.+$/.test(text) || /^##\\s*.+$/.test(text)) {\n      return \"section_title\";\n    } else if (/^.\\..\\..\\s+.+$/.test(text) || /^###\\s*.+$/.test(text)) {\n      return \"subsection_title\";\n    } else if (PureChapterSet.has(text)) {\n      return \"pure_chapter\";\n    }\n\n    return \"normal\";\n  };\n\n  UserSecretary.prototype.ListType = function (e) {\n    try {\n      var numPr = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:numPr\";\n      });\n      var level = numPr.elements.find(function (e) {\n        return e.name === \"w:ilvl\";\n      }).attributes[\"w:val\"];\n      var id = numPr.elements.find(function (e) {\n        return e.name === \"w:numId\";\n      }).attributes[\"w:val\"];\n      var type = this.m_DocxNumbering.NumberingType({\n        level: level,\n        id: id\n      });\n      return type;\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  UserSecretary.prototype.UpdateInsight = function (insight, e) {\n    if (insight.type in this.m_InsightTable) {\n      insight.type = this.m_InsightTable[insight.type](e);\n    }\n\n    return insight;\n  };\n\n  UserSecretary.prototype.Insight = function (e) {\n    var insight = _super.prototype.StructureInsight.call(this, e);\n\n    return this.UpdateInsight(insight, e);\n  };\n\n  return UserSecretary;\n}(secretary_1.Secretary);\n\nexports.UserSecretary = UserSecretary;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-numbering\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar DocxNumbering =\n/** @class */\nfunction () {\n  function DocxNumbering(numbering_xml) {\n    this.m_Numbering = xml_util_1.FileToElement(numbering_xml);\n  }\n\n  DocxNumbering.prototype.NumberingType = function (_a) {\n    var level = _a.level,\n        id = _a.id;\n\n    try {\n      var num_instance = xml_util_1.ExtractElement({\n        name: \"w:num\",\n        prop: \"w:numId\",\n        value: id,\n        e: this.m_Numbering\n      });\n      var abstract_id = num_instance.elements.find(function (e) {\n        return e.name === \"w:abstractNumId\";\n      }).attributes[\"w:val\"];\n      var num_abstract = xml_util_1.ExtractElement({\n        name: \"w:abstractNum\",\n        prop: \"w:abstractNumId\",\n        value: abstract_id,\n        e: this.m_Numbering\n      });\n      var level_info = xml_util_1.ExtractElement({\n        name: \"w:lvl\",\n        prop: \"w:ilvl\",\n        value: level,\n        e: num_abstract\n      });\n      var text = level_info.elements.find(function (e) {\n        return e.name === \"w:lvlText\";\n      }).attributes[\"w:val\"];\n      var format = level_info.elements.find(function (e) {\n        return e.name === \"w:numFmt\";\n      }).attributes[\"w:val\"];\n\n      if (format === \"decimal\") {\n        switch (text) {\n          case \"[%1]\":\n            return \"reference\";\n\n          case \"%1、\":\n            return \"item\";\n\n          case \"(%1)\":\n            return \"subitem\";\n\n          default:\n            return \"normal\";\n        }\n      }\n    } catch (error) {\n      return \"normal\";\n    }\n  };\n\n  return DocxNumbering;\n}();\n\nexports.DocxNumbering = DocxNumbering;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar table_1 = require(\"./table\");\n\nvar default_1 = require(\"./default\");\n\nvar caption_1 = require(\"./caption\");\n\nvar formula_1 = require(\"./formula\");\n\nvar raw_1 = require(\"./raw\");\n\nvar toc_1 = require(\"./toc\");\n\nexports.Distiller = {\n  Distill: function Distill(e, type) {\n    return DistillerTable[Normalize(type)].Distill(e, type);\n  }\n};\n\nfunction Normalize(type) {\n  if (type.includes(\"caption\")) {\n    return \"caption\";\n  } else if (EchoTable.indexOf(type) !== -1) {\n    return type;\n  } else if (RawTable.indexOf(type) !== -1) {\n    return \"raw\";\n  }\n\n  return \"default\";\n}\n\nvar EchoTable = [\"table\", \"formula\", \"toc\"];\nvar RawTable = [\"author_cn\", \"tutor_cn\", \"literal_abstract_cn\", \"literal_keywords_cn\", \"author_en\", \"tutor_en\", \"literal_abstract_en\", \"literal_keywords_en\", \"section\"];\nvar DistillerTable = {\n  \"table\": table_1.TableDistiller,\n  \"caption\": caption_1.CaptionDistiller,\n  \"formula\": formula_1.FormulaDistiller,\n  \"toc\": toc_1.TocDistiller,\n  \"default\": default_1.DefaultDistiller,\n  \"raw\": raw_1.RawDistiller\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TableDistiller = {\n  Distill: function Distill(e) {\n    try {\n      var style = e.elements.find(function (e) {\n        return e.name === \"w:tblPr\";\n      }) || null; // TODO: assert: there is at least one row and one column in std table\n\n      var paragraph = e.elements.find(function (e) {\n        return e.name === \"w:tr\";\n      }).elements.find(function (e) {\n        return e.name === \"w:tc\";\n      }).elements.find(function (e) {\n        return e.name === \"w:p\";\n      });\n      var paragraph_style = paragraph.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null;\n      return {\n        style: style,\n        paragraph_style: paragraph_style\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDistiller = {\n  Distill: function Distill(e) {\n    var std_default = {\n      style: e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null\n    };\n    return std_default;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.CaptionDistiller = {\n  Distill: function Distill(e, type) {\n    try {\n      var style = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null;\n\n      var _a = xml_util_1.ExtractCaption(e),\n          fields = _a.fields,\n          pre = _a.pre,\n          post = _a.post;\n\n      if (type === \"formula_caption\") {\n        return {\n          style: style,\n          label: pre.label,\n          fields: fields,\n          caption: post.caption\n        };\n      } else if (type === \"figure_caption\" || type === \"table_caption\") {\n        var caption_text = xml_util_1.RunText(post.caption);\n        var caption_space = xml_util_1.TextToRun(\" \".repeat(caption_text.length - caption_text.trimLeft().length));\n        return {\n          style: style,\n          label: pre.label,\n          fields: fields,\n          caption_space: caption_space\n        };\n      }\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormulaDistiller = {\n  Distill: function Distill(e) {\n    try {\n      var formula_index = e.elements.findIndex(function (e) {\n        return e.name === \"m:oMathPara\";\n      });\n      formula_index === -1 && (formula_index = e.elements.findIndex(function (e) {\n        return e.name === \"m:oMath\";\n      })); // start from 1, to exclude style def\n\n      var style = e.elements.find(function (e) {\n        return e.name === \"w:pPr\";\n      }) || null;\n      var pre = e.elements.slice(1, formula_index);\n      var post = e.elements.slice(formula_index + 1);\n      return {\n        style: style,\n        pre: pre,\n        post: post\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RawDistiller = {\n  Distill: function Distill(e) {\n    return {\n      style: e\n    };\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TocDistiller = {\n  Distill: function Distill(e) {\n    try {\n      var backup = JSON.parse(JSON.stringify(e));\n      var content = backup.elements.find(function (e) {\n        return e.name === \"w:sdtContent\";\n      }); //\n\n      content.elements = content.elements.filter(function (e, i) {\n        if (e.elements && e.elements.find(function (e) {\n          return e.name === \"w:hyperlink\";\n        }) && i !== 1) {\n          return false;\n        }\n\n        return true;\n      }); //\n\n      content.elements[1].elements.pop();\n      return {\n        style: backup\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./gardener\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar docx_secretary_1 = require(\"docx-secretary\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar main_1 = require(\"./section/main/main\");\n\nvar abstract_toc_1 = require(\"./section/abstract-toc/abstract-toc\");\n\nvar IndexTable = {\n  \"abstract_toc\": 0,\n  \"main\": 1\n};\n\nfunction Index(section_name, sections_length) {\n  if (sections_length === 1) {\n    return 0;\n  } else if (section_name in IndexTable) {\n    return IndexTable[section_name];\n  }\n}\n\nfunction Graft(_a) {\n  var style_sheet = _a.style_sheet,\n      user_doc = _a.user_doc,\n      user_styles = _a.user_styles,\n      user_numbering = _a.user_numbering;\n\n  var __document = docx_ts_1.Import(user_doc);\n\n  var old_body = __document.GetBody();\n\n  var sections = xml_util_1.ExtractSections(old_body.PrepareXml().elements);\n  var secretary = new docx_secretary_1.UserSecretary().UnderstandStyle(user_styles).UnderstandNumbering(user_numbering);\n  var new_body = new docx_ts_1.Body();\n\n  if (sections.length > 1) {\n    var abstract_toc = sections[Index(\"abstract_toc\", sections.length)];\n    abstract_toc && abstract_toc_1.AbstractTocGardener.Graft({\n      style_sheet: style_sheet,\n      section: abstract_toc\n    }).forEach(function (e) {\n      return new_body.AddChild(e);\n    });\n  }\n\n  var main_toc = sections[Index(\"main\", sections.length)];\n  main_toc && main_1.MainGardener.Graft({\n    style_sheet: style_sheet,\n    section: main_toc,\n    secretary: secretary\n  }).forEach(function (e) {\n    return new_body.AddChild(e);\n  });\n\n  __document.SetBody(new_body);\n\n  return xml_util_1.ElementToFile(__document.PrepareXml());\n}\n\nexports.Graft = Graft;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar attributes_1 = require(\"./attributes\");\n\nvar BaseXmlComponent =\n/** @class */\nfunction () {\n  function BaseXmlComponent(tag) {\n    this.m_Tag = tag;\n    this.m_Attributes = new attributes_1.Attributes({});\n  }\n\n  return BaseXmlComponent;\n}();\n\nexports.BaseXmlComponent = BaseXmlComponent;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_factory_1 = require(\"../xml-components/component-factory\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nfunction Clone(old) {\n  return Convert(old.PrepareXml());\n}\n\nexports.Clone = Clone;\n\nfunction Convert(e) {\n  var component = component_factory_1.ComponentFactory.CreateComponent(e);\n  e.elements && e.elements.forEach(function (child) {\n    if (child.type === \"element\") {\n      component.AddChild(Convert(child));\n    } else if (child.type === \"text\") {\n      component.AddChild(child.text);\n    }\n  });\n  return component;\n}\n\nexports.Convert = Convert;\n\nfunction Import(xml_text) {\n  return Convert(xml_util_1.FileToElement(xml_text));\n}\n\nexports.Import = Import;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_table_1 = require(\"./component-table\");\n\nvar property_item_1 = require(\"./property-item\");\n\nvar ComponentFactory =\n/** @class */\nfunction () {\n  function ComponentFactory() {}\n\n  ComponentFactory.CreateComponent = function (e) {\n    var name = e.name;\n\n    if (!(name in component_table_1.ComponentTable)) {\n      // throw or not?\n      // throw `component ${name} is not supported!`;\n      // return as property item\n      return new property_item_1.PropertyItem(name).SetAttributes(e.attributes);\n    }\n\n    var component = new component_table_1.ComponentTable[name].class().SetAttributes(e.attributes);\n    return component;\n  };\n\n  return ComponentFactory;\n}();\n\nexports.ComponentFactory = ComponentFactory;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar document_1 = require(\"../document/document\");\n\nvar body_1 = require(\"../document/body\");\n\nvar paragraph_1 = require(\"../paragraph/paragraph\");\n\nvar run_1 = require(\"../paragraph/run/run\");\n\nvar text_1 = require(\"../paragraph/run/run-components/text\");\n\nvar paragraph_prop_1 = require(\"../paragraph/paragraph-prop\");\n\nvar run_prop_1 = require(\"../paragraph/run/run-prop\");\n\nvar table_1 = require(\"../table/table\");\n\nvar table_prop_1 = require(\"../table/table-prop\"); // table for most important component\n\n\nexports.ComponentTable = {\n  \"w:document\": {\n    class: document_1.Document\n  },\n  \"w:body\": {\n    class: body_1.Body\n  },\n  \"w:p\": {\n    class: paragraph_1.Paragraph\n  },\n  \"w:pPr\": {\n    class: paragraph_prop_1.ParagraphProperty\n  },\n  \"w:r\": {\n    class: run_1.Run\n  },\n  \"w:rPr\": {\n    class: run_prop_1.RunProperty\n  },\n  \"w:t\": {\n    class: text_1.Text\n  },\n  \"w:tbl\": {\n    class: table_1.Table\n  },\n  \"w:tblPr\": {\n    class: table_prop_1.TableProperty\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar caption_1 = require(\"./caption\");\n\nvar formula_1 = require(\"./formula\");\n\nvar default_1 = require(\"./default\");\n\nvar table_1 = require(\"./table\");\n\nvar unknown_1 = require(\"./unknown\");\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar section_1 = require(\"../abstract-toc/section\");\n\nfunction Normalize(name, type) {\n  switch (name) {\n    case \"w:p\":\n      if (type.includes(\"caption\")) {\n        return \"caption\";\n      } else {\n        return type === \"formula\" ? type : \"default\";\n      }\n\n    case \"w:tbl\":\n      return \"table\";\n\n    default:\n      return \"unknown\";\n  }\n}\n\nvar GardenerTable = {\n  \"caption\": caption_1.CaptionGardener,\n  \"formula\": formula_1.FormulaGardener,\n  \"default\": default_1.DefaultGardener,\n  \"table\": table_1.TableGardener,\n  \"unknown\": unknown_1.UnknownGardener\n};\nexports.MainGardener = {\n  Graft: function Graft(_a) {\n    var style_sheet = _a.style_sheet,\n        section = _a.section,\n        secretary = _a.secretary;\n    var components = [];\n\n    for (var _i = 0, section_2 = section; _i < section_2.length; _i++) {\n      var block = section_2[_i];\n      var insight = secretary.Insight(block);\n\n      if (insight.type === \"section\") {\n        var grafted = section_1.SectionGardener.Graft({\n          item: style_sheet.Get(\"section1\"),\n          id: \"header2\"\n        });\n        components.push(grafted);\n      } else {\n        var style = style_sheet.Get(insight.type);\n        var grafted = GardenerTable[Normalize(block.name, insight.type)].Graft({\n          old: docx_ts_1.Convert(block),\n          item: style,\n          type: insight.type\n        });\n        components.push(grafted);\n      }\n    }\n\n    return components.filter(function (e) {\n      return e !== null;\n    });\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nfunction FillHole(elements, e) {\n  var backup = elements.map(function (e) {\n    return e;\n  });\n  var hole = backup.findIndex(function (e) {\n    return e === null;\n  });\n\n  if (hole === -1) {\n    backup.push(e);\n  } else {\n    backup.splice(hole, 0, e);\n  }\n\n  return backup;\n}\n\nfunction ClearHole(elements) {\n  return elements.filter(function (e) {\n    return e !== null;\n  });\n}\n\nexports.CaptionGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item,\n        type = _a.type;\n\n    try {\n      var p = old.PrepareXml();\n      var caption_style = item;\n      var _b = caption_style.caption_space,\n          caption_space = _b === void 0 ? null : _b,\n          _c = caption_style.caption,\n          caption = _c === void 0 ? null : _c; //\n\n      var _d = xml_util_1.ExtractCaption(p),\n          pre_caption = _d.pre,\n          post_caption = _d.post;\n\n      pre_caption.pre = FillHole(pre_caption.pre, caption_style.label);\n      pre_caption.pre = ClearHole(pre_caption.pre); // in formula caption, caption is null, and thus there is no hole in post\n\n      !post_caption.caption && post_caption.post.unshift(null);\n      caption_space && (post_caption.post = FillHole(post_caption.post, caption_space));\n      caption && (post_caption.caption = caption);\n      post_caption.caption = xml_util_1.TextToRun(xml_util_1.RunText(post_caption.caption).trim());\n      post_caption.post = FillHole(post_caption.post, post_caption.caption);\n      post_caption.post = ClearHole(post_caption.post);\n      p.elements = pre_caption.pre.concat(caption_style.fields, post_caption.post); //\n\n      var paragraph = docx_ts_1.Convert(p);\n      var prop = docx_ts_1.Convert(caption_style.style);\n      paragraph.UpdateProperty(prop);\n      return paragraph;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.FormulaGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item;\n\n    try {\n      //\n      var p = old.PrepareXml();\n      var formula = p.elements.find(function (e) {\n        return e.name === \"m:oMathPara\";\n      });\n      !formula && (formula = p.elements.find(function (e) {\n        return e.name === \"m:oMath\";\n      })); //\n\n      var formula_style = item;\n      p.elements = formula_style.pre.concat([formula], formula_style.post); //\n\n      var paragraph = docx_ts_1.Convert(p);\n      var prop = docx_ts_1.Convert(formula_style.style);\n      paragraph.UpdateProperty(prop);\n      return paragraph;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.TableGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old,\n        item = _a.item;\n\n    try {\n      var table = docx_ts_1.Clone(old);\n      var table_style = item;\n      var table_prop = docx_ts_1.Convert(table_style.style);\n      table.UpdateProperty(table_prop);\n      var paragraph_prop = docx_ts_1.Convert(table_style.paragraph_style);\n      table.UpdateCellProperty(paragraph_prop);\n      return table;\n    } catch (error) {\n      return docx_ts_1.Clone(old);\n      ;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.UnknownGardener = {\n  Graft: function Graft(_a) {\n    var old = _a.old;\n\n    try {\n      var unknown = docx_ts_1.Clone(old);\n      return unknown;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar toc_1 = require(\"./toc\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar title_1 = require(\"./title\");\n\nvar entity_1 = require(\"./entity\");\n\nvar name_1 = require(\"./name\");\n\nvar section_1 = require(\"./section\");\n\nvar literal_1 = require(\"./literal\");\n\nvar abstract_1 = require(\"./abstract\");\n\nvar keywords_1 = require(\"./keywords\");\n\nfunction ExtractMeta(section) {\n  var meta = {\n    \"title_cn\": \"未识别的标题\",\n    \"title_en\": \"unknown title\",\n    \"author_cn\": \"未识别的作者\",\n    \"author_en\": \"unknown author\",\n    \"tutor_cn\": \"未识别的指导教师\",\n    \"tutor_en\": \"unknown tutor\"\n  };\n\n  try {\n    var title_index = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(\"论文题目：\");\n    });\n\n    if (title_index !== -1) {\n      meta[\"title_cn\"] = xml_util_1.PlainText(section[title_index + 1]).trim();\n      meta[\"title_en\"] = xml_util_1.PlainText(section[title_index + 2]).trim();\n    }\n\n    var author_index = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(\"学生：\");\n    });\n\n    if (author_index !== -1) {\n      meta[\"author_cn\"] = xml_util_1.PlainText(section[author_index + 1]).trim();\n      meta[\"author_en\"] = xml_util_1.PlainText(section[author_index + 2]).trim();\n    }\n\n    var tutor_index = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(\"指导教师：\");\n    });\n\n    if (tutor_index !== -1) {\n      meta[\"tutor_cn\"] = xml_util_1.PlainText(section[tutor_index + 1]).trim();\n      meta[\"tutor_en\"] = xml_util_1.PlainText(section[tutor_index + 2]).trim();\n    }\n  } catch (error) {}\n\n  return meta;\n}\n\nfunction ExtractAbstract(_a) {\n  var section = _a.section,\n      start = _a.start,\n      end = _a.end;\n\n  try {\n    // ignore user typed abstract literal\n    var __start = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e) === start;\n    }) + 1; // TODO:the empty line before keywords should be supplyed by user?\n\n\n    var __end = section.findIndex(function (e) {\n      return xml_util_1.PlainText(e).startsWith(end);\n    });\n\n    var abstract_cn = section.slice(__start, __end);\n    return abstract_cn;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction ExtractAbstractCn(section) {\n  return ExtractAbstract({\n    section: section,\n    start: \"摘要\",\n    end: \"关键字：\"\n  });\n}\n\nfunction ExtractAbstractEn(section) {\n  return ExtractAbstract({\n    section: section,\n    start: \"Abstract\",\n    end: \"Keywords:\"\n  });\n}\n\nfunction ExtractKeywords(_a) {\n  var section = _a.section,\n      start = _a.start;\n\n  try {\n    var e = section.find(function (e) {\n      return xml_util_1.PlainText(e).startsWith(start);\n    });\n    var keywords = xml_util_1.PlainText(e).replace(start, \"\");\n    return keywords;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction ExtractKeywordsCn(section) {\n  return ExtractKeywords({\n    section: section,\n    start: \"关键字：\"\n  });\n}\n\nfunction ExtractKeywordsEn(section) {\n  return ExtractKeywords({\n    section: section,\n    start: \"Keywords:\"\n  });\n}\n\nexports.AbstractTocGardener = {\n  Graft: function Graft(_a) {\n    var style_sheet = _a.style_sheet,\n        section = _a.section; //\n\n    var meta = ExtractMeta(section); //\n\n    var title_cn = title_1.TitleGardener.Graft({\n      item: style_sheet.Get(\"title_cn\"),\n      title: meta.title_cn\n    });\n    var author_cn = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"author_cn\")\n    });\n    var author_name_cn = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"author_name_cn\"),\n      name: meta.author_cn\n    });\n    var tutor_cn = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"tutor_cn\")\n    });\n    var tutor_name_cn = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"tutor_name_cn\"),\n      name: meta.tutor_cn\n    });\n    var literal_abstract_cn = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_abstract_cn\")\n    });\n    var abstract_cn = abstract_1.AbstractGardener.Graft({\n      abstract: ExtractAbstractCn(section),\n      item: style_sheet.Get(\"normal\")\n    });\n    var literal_keywords_cn = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_keywords_cn\")\n    });\n    var keywords_cn = keywords_1.KeywordsGardener.Graft({\n      keywords: ExtractKeywordsCn(section),\n      item: style_sheet.Get(\"normal\")\n    }); //\n\n    var title_en = title_1.TitleGardener.Graft({\n      item: style_sheet.Get(\"title_en\"),\n      title: meta.title_en\n    });\n    var author_en = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"author_en\")\n    });\n    var author_name_en = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"author_name_en\"),\n      name: meta.author_en\n    });\n    var tutor_en = entity_1.EntityGardener.Graft({\n      item: style_sheet.Get(\"tutor_en\")\n    });\n    var tutor_name_en = name_1.NameGardener.Graft({\n      item: style_sheet.Get(\"tutor_name_en\"),\n      name: meta.tutor_en\n    });\n    var literal_abstract_en = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_abstract_en\")\n    });\n    var abstract_en = abstract_1.AbstractGardener.Graft({\n      abstract: ExtractAbstractEn(section),\n      item: style_sheet.Get(\"normal\")\n    });\n    var literal_keywords_en = literal_1.LiteralGardener.Graft({\n      item: style_sheet.Get(\"literal_keywords_en\")\n    });\n    var keywords_en = keywords_1.KeywordsGardener.Graft({\n      keywords: ExtractKeywordsEn(section),\n      item: style_sheet.Get(\"normal\")\n    }); //\n\n    var toc = toc_1.TocGardener.Graft({\n      item: style_sheet.Get(\"toc\")\n    });\n    var abstract_toc_section = section_1.SectionGardener.Graft({\n      item: style_sheet.Get(\"section0\"),\n      id: \"header1\"\n    }); //\n\n    var grafted = [title_cn, author_cn, author_name_cn, tutor_cn, tutor_name_cn, literal_abstract_cn].concat(abstract_cn, [literal_keywords_cn, keywords_cn, title_en, author_en, author_name_en, tutor_en, tutor_name_en, literal_abstract_en], abstract_en, [literal_keywords_en, keywords_en, toc, abstract_toc_section]).filter(function (e) {\n      return e !== null;\n    });\n    return grafted;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.TocGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item;\n\n    try {\n      // TODO: use general prop item or TOC component?\n      var toc = docx_ts_1.Convert(item.style);\n      return toc;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.TitleGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item,\n        title = _a.title;\n\n    try {\n      var p = docx_ts_1.Convert(xml_util_1.TextToParagraph(title));\n      p.UpdateProperty(docx_ts_1.Convert(item.style));\n      return p;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.EntityGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item;\n\n    try {\n      var p = docx_ts_1.Convert(item.style); // caution! \n      // keep style because something such as aligning text(in 4 characters distance)... etc\n      // has nothing to do with style and it belongs to DIRECT style\n\n      p.KeepStyle();\n      return p;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nexports.NameGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item,\n        name = _a.name;\n\n    try {\n      var p = docx_ts_1.Convert(xml_util_1.TextToParagraph(name));\n      p.UpdateProperty(docx_ts_1.Convert(item.style));\n      return p;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nexports.LiteralGardener = {\n  Graft: function Graft(_a) {\n    var item = _a.item;\n\n    try {\n      return docx_ts_1.Convert(item.style);\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar default_1 = require(\"../main/default\");\n\nexports.AbstractGardener = {\n  Graft: function Graft(_a) {\n    var abstract = _a.abstract,\n        item = _a.item;\n\n    try {\n      var result = abstract.map(function (e) {\n        return default_1.DefaultGardener.Graft({\n          old: docx_ts_1.Convert(e),\n          item: item,\n          type: \"normal\"\n        });\n      });\n      return result;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar docx_ts_1 = require(\"docx-ts\");\n\nvar xml_util_1 = require(\"xml-util\");\n\nvar default_1 = require(\"../main/default\");\n\nexports.KeywordsGardener = {\n  Graft: function Graft(_a) {\n    var keywords = _a.keywords,\n        item = _a.item;\n\n    if (!keywords) {\n      return null;\n    }\n\n    try {\n      var component = default_1.DefaultGardener.Graft({\n        old: docx_ts_1.Convert(xml_util_1.TextToParagraph(keywords)),\n        item: item\n      });\n      return component;\n    } catch (error) {\n      return null;\n    }\n  }\n};","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./docx-package\"));","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar JsZip = require(\"jszip\"); // name: path\n\n\nvar package_content_table = {\n  \"content_types\": \"[Content_Types].xml\",\n  \"doc_parts_rel\": \"word/_rels/document.xml.rels\",\n  \"theme\": \"word/theme/theme1.xml\",\n  \"document\": \"word/document.xml\",\n  \"settings\": \"word/settings.xml\",\n  \"numbering\": \"word/numbering.xml\",\n  \"font_table\": \"word/fontTable.xml\",\n  \"styles\": \"word/styles.xml\",\n  \"foot_notes\": \"word/footnotes.xml\",\n  \"end_notes\": \"word/endnotes.xml\",\n  \"header1\": \"word/header1.xml\",\n  \"header2\": \"word/header2.xml\",\n  \"header1_rel\": \"word/_rels/header1.xml.rels\",\n  \"header2_rel\": \"word/_rels/header2.xml.rels\",\n  \"header_logo\": \"word/media/image1.png\",\n  \"literal_header_logo\": \"word/media/header_logo.png\"\n};\n\nvar DocxPackage =\n/** @class */\nfunction () {\n  function DocxPackage() {}\n\n  DocxPackage.prototype.FromArrayBuffer = function (buffer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , JsZip.loadAsync(buffer)];\n\n          case 1:\n            _a.m_Package = _b.sent();\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  DocxPackage.prototype.ToArrayBuffer = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.m_Package.generateAsync({\n              type: \"arraybuffer\"\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  DocxPackage.prototype.Read = function (name, type) {\n    if (type === void 0) {\n      type = \"text\";\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var path, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            path = package_content_table[name];\n            return [4\n            /*yield*/\n            , this.m_Package.files[path].async(type)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 2:\n            error_1 = _a.sent();\n            console.log(\"invalid name \" + name + \" in reading xml of docx\");\n            return [2\n            /*return*/\n            , null];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DocxPackage.prototype.Save = function (_a) {\n    var content = _a.content,\n        name = _a.name;\n    var path = package_content_table[name];\n\n    if (path && content) {\n      this.m_Package.file(path, content);\n    } else {\n      console.log(\"invalid name \" + name + \" in saving xml of docx\");\n    }\n\n    return this;\n  };\n\n  return DocxPackage;\n}();\n\nexports.DocxPackage = DocxPackage;","import { FormatPackageNative, DocxPackage } from \"docx-driver\";\r\nimport { decode } from \"base64-arraybuffer\";\r\nimport { standard_base64 } from \"../../asset/standard_base64\";\r\nimport save from \"save-file/browser\";\r\n\r\nlet standard: DocxPackage;\r\n\r\nexport async function Format(user_buffer: ArrayBuffer, file_name: string)\r\n{\r\n    if (!standard)\r\n    {\r\n        standard = await new DocxPackage().FromArrayBuffer(decode(standard_base64) as ArrayBuffer);\r\n    }\r\n    const user = await new DocxPackage().FromArrayBuffer(user_buffer);\r\n    await FormatPackageNative({ standard, input: user });\r\n    await save(await user.ToArrayBuffer(), `${file_name.replace(\".docx\", \"\")}.formatted.docx`);\r\n}","import React, { Component } from 'react';\r\nimport { Nav, INavLink } from 'office-ui-fabric-react';\r\nimport styles from \"./nav.module.css\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass LeftNav extends Component\r\n{\r\n    constructor(props: any)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    OnLinkClick(ev?: React.MouseEvent<HTMLElement>, item?: INavLink) \r\n    {\r\n        (this.props as any).dispatch({ type: \"navigation\", link_key: (item as INavLink).key });\r\n    };\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Nav className={styles.nav}\r\n                groups={[\r\n                    {\r\n                        links: [\r\n                            { name: '排版', url: '#', key: 'format' },\r\n                            // { name: '格式检查', url: '#', key: 'lint' },\r\n                            { name: '使用手册', url: '#', key: 'manual' }\r\n                        ]\r\n                    }\r\n                ]}\r\n                selectedKey={(this.props as any).link_key || \"format\"}\r\n                onLinkClick={this.OnLinkClick.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: any) =>\r\n{\r\n    return { link_key: state.link_key }\r\n}\r\n\r\nconst __LeftNav = connect(MapStateToProps)(LeftNav);\r\nexport { __LeftNav as LeftNav };\r\n","const standard_base64 = \"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\";\nexport {standard_base64};","import React, { Component } from 'react';\r\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\r\nimport styles from \"./cmdbar.module.css\";\r\nimport { Format } from './command';\r\n\r\nconst cmd_button_styles = { root: { backgroundColor: \"white\", padding: \"8px\" } };\r\n\r\nclass CommandBar extends Component\r\n{\r\n    OnClickUpload()\r\n    {\r\n        const upload = document.getElementById(\"upload\") as HTMLInputElement;\r\n        upload.click();\r\n    }\r\n\r\n    OnUploadFile(e: any)\r\n    {\r\n        const files = (e.target as HTMLInputElement).files as FileList;\r\n        if (files.length === 1)\r\n        {\r\n            const file = files[0];\r\n            const file_name = file.name;\r\n            console.log(`upload ${file_name}...`);\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = () =>\r\n            {\r\n                const buffer = reader.result;\r\n                Format(buffer as ArrayBuffer, file_name);\r\n                (document.getElementById(\"form\") as HTMLFormElement).reset();\r\n            };\r\n            reader.readAsArrayBuffer(file);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className={styles.cmdbar}>\r\n                <form id=\"form\">\r\n                    <input type=\"file\" id=\"upload\" onChange={this.OnUploadFile.bind(this)} style={{ display: \"none\" }} />\r\n                </form>\r\n                <CommandBarButton\r\n                    iconProps={{ iconName: 'OpenFolderHorizontal' }}\r\n                    text=\"打开\"\r\n                    styles={cmd_button_styles}\r\n                    onClick={this.OnClickUpload.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { CommandBar };\r\n","import React, { Component } from 'react';\r\n\r\nclass FormatIntro extends Component\r\n{\r\n    render()\r\n    {\r\n        // TODO: add id?\r\n        return (\r\n            <div>\r\n                <h1 className=\"ms-font-xxl\">排版</h1>\r\n                <p className=\"ms-font-l\">按照使用手册中约定的方式进行输入，选择论文后自动开始排版。</p>\r\n                <p className=\"ms-font-l\">排版完成后浏览器自动下载排版后的论文，文件名默认为*.formatted.docx。</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { FormatIntro };\r\n","import React, { Component } from 'react';\r\n\r\nclass LintIntro extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1 className=\"ms-font-xxl\">格式检查</h1>\r\n                <p className=\"ms-font-l\">选择论文后自动开始检查格式，软件会尽力找出所有排版问题，最终打印论文前请与导师确认。</p>\r\n                <p className=\"ms-font-l\">检查完成后浏览器自动下载检查报告，文件名默认为*.lint.docx。</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { LintIntro };\r\n","import React, { Component } from 'react';\r\nimport { Nav, INavLinkGroup } from 'office-ui-fabric-react';\r\nimport styles from \"./manual.module.css\";\r\n\r\nfunction url(id: number)\r\n{\r\n    return `https://github.com/ianpas/auto-format/issues/${id.toString()}`;\r\n}\r\n\r\nclass ManualIntro extends Component\r\n{\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1 className={`ms-font-xxl ${styles.head}`}>使用手册</h1>\r\n                <p className=\"ms-font-l\">由于希望及时获得使用后的反馈，所以手册以Github Issue的形式写成，以下是手册目录：</p>\r\n\r\n                <h1 className={`ms-font-xxl ${styles.toc}`}>目录</h1>\r\n                <Nav\r\n                    groups={[\r\n                        {\r\n                            links: [\r\n                                { name: \"软件简介\", key: \"8\", url: url(8), target: \"_blank\" },\r\n                                { name: \"如何写摘要\", key: \"1\", url: url(1), target: \"_blank\" },\r\n                                { name: \"如何写新的一章/节/条\", key: \"2\", url: url(2), target: \"_blank\" },\r\n                                { name: \"如何使用图片\", key: \"3\", url: url(3), target: \"_blank\" },\r\n                                { name: \"如何使用表格\", key: \"4\", url: url(4), target: \"_blank\" },\r\n                                { name: \"如何使用公式\", key: \"5\", url: url(5), target: \"_blank\" },\r\n                                { name: \"如何使用款和项\", key: \"6\", url: url(6), target: \"_blank\" },\r\n                                { name: \"如何写参考文献\", key: \"7\", url: url(7), target: \"_blank\" },\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { ManualIntro };\r\n","import React, { Component } from 'react';\r\nimport styles from \"./main.module.css\";\r\nimport { CommandBar } from \"../cmd-bar/CommandBar\";\r\nimport { FormatIntro } from '../intro/FormatIntro';\r\nimport { LintIntro } from '../intro/LintIntro';\r\nimport { ManualIntro } from '../intro/ManualIntro';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Main extends Component\r\n{\r\n\r\n    DisplayIntro()\r\n    {\r\n        switch ((this.props as any).link_key)\r\n        {\r\n            case \"format\":\r\n                return <FormatIntro />;\r\n            case \"lint\":\r\n                return <LintIntro />;\r\n            case \"manual\":\r\n                return <ManualIntro />;\r\n            default:\r\n                return <FormatIntro />;\r\n        }\r\n    }\r\n\r\n    DisplayCmdBar()\r\n    {\r\n        switch ((this.props as any).link_key)\r\n        {\r\n            case \"manual\":\r\n                return null;\r\n            default:\r\n                return <CommandBar />;\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <div className={styles.main}>\r\n                {this.DisplayCmdBar()}\r\n                {this.DisplayIntro()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: any) =>\r\n{\r\n    return { link_key: state.link_key }\r\n}\r\n\r\nconst __Main = connect(MapStateToProps)(Main);\r\nexport { __Main as Main };","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import './App.css';\nimport { LeftNav } from \"../left-nav/LeftNav\";\nimport styles from \"./app.module.css\";\nimport { Main } from \"../main/Main\";\n\nclass App extends Component\n{\n    render()\n    {\n        return (\n            <div className={`ms-Grid ${styles.grid}`} dir=\"ltr\">\n                <div className={`ms-Grid-row ${styles.row}`}>\n                    <div className={`ms-Grid-col ms-sm2 ms-md2 ${styles.column}`}>\n                        <LeftNav />\n                    </div>\n                    <div className={`ms-Grid-col ms-sm10 ms-md10 ${styles.column}`}>\n                        <Main />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\ninitializeIcons();\n\nconst reducer = (state: any, action: any) =>\n{\n    if (action.type === \"navigation\")\n    {\n        return { link_key: action.link_key };\n    }\n    return { link_key: \"format\" };\n};\n\nconst store = createStore(\n    reducer,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}